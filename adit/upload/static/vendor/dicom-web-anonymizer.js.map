{"version":3,"file":"dicom-web-anonymizer.js","sources":["../src/lists.ts","../src/addressanonymizer.ts","../src/datetimeanonymizer.ts","../src/fixedvalueanonymizer.ts","../src/idanonymizer.ts","../src/institutionanonymizer.ts","../src/pnanonymizer.ts","../src/privatetaganonymizer.ts","../src/randomizer.ts","../src/uianonymizer.ts","../src/unwantedelements.ts","../src/valuekeeper.ts","../src/anonymizer.ts"],"sourcesContent":["export class lists {\n  public streets: string[];\n  public cities: string[];\n  public countries: string[];\n  public femaleFirstNames: string[];\n  public maleFirstNames: string[];\n  public allFirstNames: string[];\n  public lastNames: string[];\n\n  constructor() {\n    this.femaleFirstNames = [\n      \"MARY\",\n      \"PATRICIA\",\n      \"LINDA\",\n      \"BARBARA\",\n      \"ELIZABETH\",\n      \"JENNIFER\",\n      \"MARIA\",\n      \"SUSAN\",\n      \"MARGARET\",\n      \"DOROTHY\",\n      \"LISA\",\n      \"NANCY\",\n      \"KAREN\",\n      \"BETTY\",\n      \"HELEN\",\n      \"SANDRA\",\n      \"DONNA\",\n      \"CAROL\",\n      \"RUTH\",\n      \"SHARON\",\n      \"MICHELLE\",\n      \"LAURA\",\n      \"SARAH\",\n      \"KIMBERLY\",\n      \"DEBORAH\",\n      \"JESSICA\",\n      \"SHIRLEY\",\n      \"CYNTHIA\",\n      \"ANGELA\",\n      \"MELISSA\",\n      \"BRENDA\",\n      \"AMY\",\n      \"ANNA\",\n      \"REBECCA\",\n      \"VIRGINIA\",\n      \"KATHLEEN\",\n      \"PAMELA\",\n      \"MARTHA\",\n      \"DEBRA\",\n      \"AMANDA\",\n      \"STEPHANIE\",\n      \"CAROLYN\",\n      \"CHRISTINE\",\n      \"MARIE\",\n      \"JANET\",\n      \"CATHERINE\",\n      \"FRANCES\",\n      \"ANN\",\n      \"JOYCE\",\n      \"DIANE\",\n      \"ALICE\",\n      \"JULIE\",\n      \"HEATHER\",\n      \"TERESA\",\n      \"DORIS\",\n      \"GLORIA\",\n      \"EVELYN\",\n      \"JEAN\",\n      \"CHERYL\",\n      \"MILDRED\",\n      \"KATHERINE\",\n      \"JOAN\",\n      \"ASHLEY\",\n      \"JUDITH\",\n      \"ROSE\",\n      \"JANICE\",\n      \"KELLY\",\n      \"NICOLE\",\n      \"JUDY\",\n      \"CHRISTINA\",\n      \"KATHY\",\n      \"THERESA\",\n      \"BEVERLY\",\n      \"DENISE\",\n      \"TAMMY\",\n      \"IRENE\",\n      \"JANE\",\n      \"LORI\",\n      \"RACHEL\",\n      \"MARILYN\",\n      \"ANDREA\",\n      \"KATHRYN\",\n      \"LOUISE\",\n      \"SARA\",\n      \"ANNE\",\n      \"JACQUELINE\",\n      \"WANDA\",\n      \"BONNIE\",\n      \"JULIA\",\n      \"RUBY\",\n      \"LOIS\",\n      \"TINA\",\n      \"PHYLLIS\",\n      \"NORMA\",\n      \"PAULA\",\n      \"DIANA\",\n      \"ANNIE\",\n      \"LILLIAN\",\n      \"EMILY\",\n      \"ROBIN\",\n      \"PEGGY\",\n      \"CRYSTAL\",\n      \"GLADYS\",\n      \"RITA\",\n      \"DAWN\",\n      \"CONNIE\",\n      \"FLORENCE\",\n      \"TRACY\",\n      \"EDNA\",\n      \"TIFFANY\",\n      \"CARMEN\",\n      \"ROSA\",\n      \"CINDY\",\n      \"GRACE\",\n      \"WENDY\",\n      \"VICTORIA\",\n      \"EDITH\",\n      \"KIM\",\n      \"SHERRY\",\n      \"SYLVIA\",\n      \"JOSEPHINE\",\n      \"THELMA\",\n      \"SHANNON\",\n      \"SHEILA\",\n      \"ETHEL\",\n      \"ELLEN\",\n      \"ELAINE\",\n      \"MARJORIE\",\n      \"CARRIE\",\n      \"CHARLOTTE\",\n      \"MONICA\",\n      \"ESTHER\",\n      \"PAULINE\",\n      \"EMMA\",\n      \"JUANITA\",\n      \"ANITA\",\n      \"RHONDA\",\n      \"HAZEL\",\n      \"AMBER\",\n      \"EVA\",\n      \"DEBBIE\",\n      \"APRIL\",\n      \"LESLIE\",\n      \"CLARA\",\n      \"LUCILLE\",\n      \"JAMIE\",\n      \"JOANNE\",\n      \"ELEANOR\",\n      \"VALERIE\",\n      \"DANIELLE\",\n      \"MEGAN\",\n      \"ALICIA\",\n      \"SUZANNE\",\n      \"MICHELE\",\n      \"GAIL\",\n      \"BERTHA\",\n      \"DARLENE\",\n      \"VERONICA\",\n      \"JILL\",\n      \"ERIN\",\n      \"GERALDINE\",\n      \"LAUREN\",\n      \"CATHY\",\n      \"JOANN\",\n      \"LORRAINE\",\n      \"LYNN\",\n      \"SALLY\",\n      \"REGINA\",\n      \"ERICA\",\n      \"BEATRICE\",\n      \"DOLORES\",\n      \"BERNICE\",\n      \"AUDREY\",\n      \"YVONNE\",\n      \"ANNETTE\",\n      \"JUNE\",\n      \"SAMANTHA\",\n      \"MARION\",\n      \"DANA\",\n      \"STACY\",\n      \"ANA\",\n      \"RENEE\",\n      \"IDA\",\n      \"VIVIAN\",\n      \"ROBERTA\",\n      \"HOLLY\",\n      \"BRITTANY\",\n      \"MELANIE\",\n      \"LORETTA\",\n      \"YOLANDA\",\n      \"JEANETTE\",\n      \"LAURIE\",\n      \"KATIE\",\n      \"KRISTEN\",\n      \"VANESSA\",\n      \"ALMA\",\n      \"SUE\",\n      \"ELSIE\",\n      \"BETH\",\n      \"JEANNE\",\n      \"VICKI\",\n      \"CARLA\",\n      \"TARA\",\n      \"ROSEMARY\",\n      \"EILEEN\",\n      \"TERRI\",\n      \"GERTRUDE\",\n      \"LUCY\",\n      \"TONYA\",\n      \"ELLA\",\n      \"STACEY\",\n      \"WILMA\",\n      \"GINA\",\n      \"KRISTIN\",\n      \"JESSIE\",\n      \"NATALIE\",\n      \"AGNES\",\n      \"VERA\",\n      \"WILLIE\",\n      \"CHARLENE\",\n      \"BESSIE\",\n      \"DELORES\",\n      \"MELINDA\",\n      \"PEARL\",\n      \"ARLENE\",\n      \"MAUREEN\",\n      \"COLLEEN\",\n      \"ALLISON\",\n      \"TAMARA\",\n      \"JOY\",\n      \"GEORGIA\",\n      \"CONSTANCE\",\n      \"LILLIE\",\n      \"CLAUDIA\",\n      \"JACKIE\",\n      \"MARCIA\",\n      \"TANYA\",\n      \"NELLIE\",\n      \"MINNIE\",\n      \"MARLENE\",\n      \"HEIDI\",\n      \"GLENDA\",\n      \"LYDIA\",\n      \"VIOLA\",\n      \"COURTNEY\",\n      \"MARIAN\",\n      \"STELLA\",\n      \"CAROLINE\",\n      \"DORA\",\n      \"JO\",\n      \"VICKIE\",\n      \"MATTIE\",\n      \"TERRY\",\n      \"MAXINE\",\n      \"IRMA\",\n      \"MABEL\",\n      \"MARSHA\",\n      \"MYRTLE\",\n      \"LENA\",\n      \"CHRISTY\",\n      \"DEANNA\",\n      \"PATSY\",\n      \"HILDA\",\n      \"GWENDOLYN\",\n      \"JENNIE\",\n      \"NORA\",\n      \"MARGIE\",\n      \"NINA\",\n      \"CASSANDRA\",\n      \"LEAH\",\n      \"PENNY\",\n      \"KAY\",\n      \"PRISCILLA\",\n      \"NAOMI\",\n      \"CAROLE\",\n      \"BRANDY\",\n      \"OLGA\",\n      \"BILLIE\",\n      \"DIANNE\",\n      \"TRACEY\",\n      \"LEONA\",\n      \"JENNY\",\n      \"FELICIA\",\n      \"SONIA\",\n      \"MIRIAM\",\n      \"VELMA\",\n      \"BECKY\",\n      \"BOBBIE\",\n      \"VIOLET\",\n      \"KRISTINA\",\n      \"TONI\",\n      \"MISTY\",\n      \"MAE\",\n      \"SHELLY\",\n      \"DAISY\",\n      \"RAMONA\",\n      \"SHERRI\",\n      \"ERIKA\",\n      \"KATRINA\",\n      \"CLAIRE\",\n      \"LINDSEY\",\n      \"LINDSAY\",\n      \"GENEVA\",\n      \"GUADALUPE\",\n      \"BELINDA\",\n      \"MARGARITA\",\n      \"SHERYL\",\n      \"CORA\",\n      \"FAYE\",\n      \"ADA\",\n      \"NATASHA\",\n      \"SABRINA\",\n      \"ISABEL\",\n      \"MARGUERITE\",\n      \"HATTIE\",\n      \"HARRIET\",\n      \"MOLLY\",\n      \"CECILIA\",\n      \"KRISTI\",\n      \"BRANDI\",\n      \"BLANCHE\",\n      \"SANDY\",\n      \"ROSIE\",\n      \"JOANNA\",\n      \"IRIS\",\n      \"EUNICE\",\n      \"ANGIE\",\n      \"INEZ\",\n      \"LYNDA\",\n      \"MADELINE\",\n      \"AMELIA\",\n      \"ALBERTA\",\n      \"GENEVIEVE\",\n      \"MONIQUE\",\n      \"JODI\",\n      \"JANIE\",\n      \"MAGGIE\",\n      \"KAYLA\",\n      \"SONYA\",\n      \"JAN\",\n      \"LEE\",\n      \"KRISTINE\",\n      \"CANDACE\",\n      \"FANNIE\",\n      \"MARYANN\",\n      \"OPAL\",\n      \"ALISON\",\n      \"YVETTE\",\n      \"MELODY\",\n      \"LUZ\",\n      \"SUSIE\",\n      \"OLIVIA\",\n      \"FLORA\",\n      \"SHELLEY\",\n      \"KRISTY\",\n      \"MAMIE\",\n      \"LULA\",\n      \"LOLA\",\n      \"VERNA\",\n      \"BEULAH\",\n      \"ANTOINETTE\",\n      \"CANDICE\",\n      \"JUANA\",\n      \"JEANNETTE\",\n      \"PAM\",\n      \"KELLI\",\n      \"HANNAH\",\n      \"WHITNEY\",\n      \"BRIDGET\",\n      \"KARLA\",\n      \"CELIA\",\n      \"LATOYA\",\n      \"PATTY\",\n      \"SHELIA\",\n      \"GAYLE\",\n      \"DELLA\",\n      \"VICKY\",\n      \"LYNNE\",\n      \"SHERI\",\n      \"MARIANNE\",\n      \"KARA\",\n      \"JACQUELYN\",\n      \"ERMA\",\n      \"BLANCA\",\n      \"MYRA\",\n      \"LETICIA\",\n      \"PAT\",\n      \"KRISTA\",\n      \"ROXANNE\",\n      \"ANGELICA\",\n      \"JOHNNIE\",\n      \"ROBYN\",\n      \"FRANCIS\",\n      \"ADRIENNE\",\n      \"ROSALIE\",\n      \"ALEXANDRA\",\n      \"BROOKE\",\n      \"BETHANY\",\n      \"SADIE\",\n      \"BERNADETTE\",\n      \"TRACI\",\n      \"JODY\",\n      \"KENDRA\",\n      \"JASMINE\",\n      \"NICHOLE\",\n      \"RACHAEL\",\n      \"CHELSEA\",\n      \"MABLE\",\n      \"ERNESTINE\",\n      \"MURIEL\",\n      \"MARCELLA\",\n      \"ELENA\",\n      \"KRYSTAL\",\n      \"ANGELINA\",\n      \"NADINE\",\n      \"KARI\",\n      \"ESTELLE\",\n      \"DIANNA\",\n      \"PAULETTE\",\n      \"LORA\",\n      \"MONA\",\n      \"DOREEN\",\n      \"ROSEMARIE\",\n      \"ANGEL\",\n      \"DESIREE\",\n      \"ANTONIA\",\n      \"HOPE\",\n      \"GINGER\",\n      \"JANIS\",\n      \"BETSY\",\n      \"CHRISTIE\",\n      \"FREDA\",\n      \"MERCEDES\",\n      \"MEREDITH\",\n      \"LYNETTE\",\n      \"TERI\",\n      \"CRISTINA\",\n      \"EULA\",\n      \"LEIGH\",\n      \"MEGHAN\",\n      \"SOPHIA\",\n      \"ELOISE\",\n      \"ROCHELLE\",\n      \"GRETCHEN\",\n      \"CECELIA\",\n      \"RAQUEL\",\n      \"HENRIETTA\",\n      \"ALYSSA\",\n      \"JANA\",\n      \"KELLEY\",\n      \"GWEN\",\n      \"KERRY\",\n      \"JENNA\",\n      \"TRICIA\",\n      \"LAVERNE\",\n      \"OLIVE\",\n      \"ALEXIS\",\n      \"TASHA\",\n      \"SILVIA\",\n      \"ELVIRA\",\n      \"CASEY\",\n      \"DELIA\",\n      \"SOPHIE\",\n      \"KATE\",\n      \"PATTI\",\n      \"LORENA\",\n      \"KELLIE\",\n      \"SONJA\",\n      \"LILA\",\n      \"LANA\",\n      \"DARLA\",\n      \"MAY\",\n      \"MINDY\",\n      \"ESSIE\",\n      \"MANDY\",\n      \"LORENE\",\n      \"ELSA\",\n      \"JOSEFINA\",\n      \"JEANNIE\",\n      \"MIRANDA\",\n      \"DIXIE\",\n      \"LUCIA\",\n      \"MARTA\",\n      \"FAITH\",\n      \"LELA\",\n      \"JOHANNA\",\n      \"SHARI\",\n      \"CAMILLE\",\n      \"TAMI\",\n      \"SHAWNA\",\n      \"ELISA\",\n      \"EBONY\",\n      \"MELBA\",\n      \"ORA\",\n      \"NETTIE\",\n      \"TABITHA\",\n      \"OLLIE\",\n      \"JAIME\",\n      \"WINIFRED\",\n      \"KRISTIE\",\n      \"MARINA\",\n      \"ALISHA\",\n      \"AIMEE\",\n      \"RENA\",\n      \"MYRNA\",\n      \"MARLA\",\n      \"TAMMIE\",\n      \"LATASHA\",\n      \"BONITA\",\n      \"PATRICE\",\n      \"RONDA\",\n      \"SHERRIE\",\n      \"ADDIE\",\n      \"FRANCINE\",\n      \"DELORIS\",\n      \"STACIE\",\n      \"ADRIANA\",\n      \"CHERI\",\n      \"SHELBY\",\n      \"ABIGAIL\",\n      \"CELESTE\",\n      \"JEWEL\",\n      \"CARA\",\n      \"ADELE\",\n      \"REBEKAH\",\n      \"LUCINDA\",\n      \"DORTHY\",\n      \"CHRIS\",\n      \"EFFIE\",\n      \"TRINA\",\n      \"REBA\",\n      \"SHAWN\",\n      \"SALLIE\",\n      \"AURORA\",\n      \"LENORA\",\n      \"ETTA\",\n      \"LOTTIE\",\n      \"KERRI\",\n      \"TRISHA\",\n      \"NIKKI\",\n      \"ESTELLA\",\n      \"FRANCISCA\",\n      \"JOSIE\",\n      \"TRACIE\",\n      \"MARISSA\",\n      \"KARIN\",\n      \"BRITTNEY\",\n      \"JANELLE\",\n      \"LOURDES\",\n      \"LAUREL\",\n      \"HELENE\",\n      \"FERN\",\n      \"ELVA\",\n      \"CORINNE\",\n      \"KELSEY\",\n      \"INA\",\n      \"BETTIE\",\n      \"ELISABETH\",\n      \"AIDA\",\n      \"CAITLIN\",\n      \"INGRID\",\n      \"IVA\",\n      \"EUGENIA\",\n      \"CHRISTA\",\n      \"GOLDIE\",\n      \"CASSIE\",\n      \"MAUDE\",\n      \"JENIFER\",\n      \"THERESE\",\n      \"FRANKIE\",\n      \"DENA\",\n      \"LORNA\",\n      \"JANETTE\",\n      \"LATONYA\",\n      \"CANDY\",\n      \"MORGAN\",\n      \"CONSUELO\",\n      \"TAMIKA\",\n      \"ROSETTA\",\n      \"DEBORA\",\n      \"CHERIE\",\n      \"POLLY\",\n      \"DINA\",\n      \"JEWELL\",\n      \"FAY\",\n      \"JILLIAN\",\n      \"DOROTHEA\",\n      \"NELL\",\n      \"TRUDY\",\n      \"ESPERANZA\",\n      \"PATRICA\",\n      \"KIMBERLEY\",\n      \"SHANNA\",\n      \"HELENA\",\n      \"CAROLINA\",\n      \"CLEO\",\n      \"STEFANIE\",\n      \"ROSARIO\",\n      \"OLA\",\n      \"JANINE\",\n      \"MOLLIE\",\n      \"LUPE\",\n      \"ALISA\",\n      \"LOU\",\n      \"MARIBEL\",\n      \"SUSANNE\",\n      \"BETTE\",\n      \"SUSANA\",\n      \"ELISE\",\n      \"CECILE\",\n      \"ISABELLE\",\n      \"LESLEY\",\n      \"JOCELYN\",\n      \"PAIGE\",\n      \"JONI\",\n      \"RACHELLE\",\n      \"LEOLA\",\n      \"DAPHNE\",\n      \"ALTA\",\n      \"ESTER\",\n      \"PETRA\",\n      \"GRACIELA\",\n      \"IMOGENE\",\n      \"JOLENE\",\n      \"KEISHA\",\n      \"LACEY\",\n      \"GLENNA\",\n      \"GABRIELA\",\n      \"KERI\",\n      \"URSULA\",\n      \"LIZZIE\",\n      \"KIRSTEN\",\n      \"SHANA\",\n      \"ADELINE\",\n      \"MAYRA\",\n      \"JAYNE\",\n      \"JACLYN\",\n      \"GRACIE\",\n      \"SONDRA\",\n      \"CARMELA\",\n      \"MARISA\",\n      \"ROSALIND\",\n      \"CHARITY\",\n      \"TONIA\",\n      \"BEATRIZ\",\n      \"MARISOL\",\n      \"CLARICE\",\n      \"JEANINE\",\n      \"SHEENA\",\n      \"ANGELINE\",\n      \"FRIEDA\",\n      \"LILY\",\n      \"ROBBIE\",\n      \"SHAUNA\",\n      \"MILLIE\",\n      \"CLAUDETTE\",\n      \"CATHLEEN\",\n      \"ANGELIA\",\n      \"GABRIELLE\",\n      \"AUTUMN\",\n      \"KATHARINE\",\n      \"SUMMER\",\n      \"JODIE\",\n      \"STACI\",\n      \"LEA\",\n      \"CHRISTI\",\n      \"JIMMIE\",\n      \"JUSTINE\",\n      \"ELMA\",\n      \"LUELLA\",\n      \"MARGRET\",\n      \"DOMINIQUE\",\n      \"SOCORRO\",\n      \"RENE\",\n      \"MARTINA\",\n      \"MARGO\",\n      \"MAVIS\",\n      \"CALLIE\",\n      \"BOBBI\",\n      \"MARITZA\",\n      \"LUCILE\",\n      \"LEANNE\",\n      \"JEANNINE\",\n      \"DEANA\",\n      \"AILEEN\",\n      \"LORIE\",\n      \"LADONNA\",\n      \"WILLA\",\n      \"MANUELA\",\n      \"GALE\",\n      \"SELMA\",\n      \"DOLLY\",\n      \"SYBIL\",\n      \"ABBY\",\n      \"LARA\",\n      \"DALE\",\n      \"IVY\",\n      \"DEE\",\n      \"WINNIE\",\n      \"MARCY\",\n      \"LUISA\",\n      \"JERI\",\n      \"MAGDALENA\",\n      \"OFELIA\",\n      \"MEAGAN\",\n      \"AUDRA\",\n      \"MATILDA\",\n      \"LEILA\",\n      \"CORNELIA\",\n      \"BIANCA\",\n      \"SIMONE\",\n      \"BETTYE\",\n      \"RANDI\",\n      \"VIRGIE\",\n      \"LATISHA\",\n      \"BARBRA\",\n      \"GEORGINA\",\n      \"ELIZA\",\n      \"LEANN\",\n      \"BRIDGETTE\",\n      \"RHODA\",\n      \"HALEY\",\n      \"ADELA\",\n      \"NOLA\",\n      \"BERNADINE\",\n      \"FLOSSIE\",\n      \"ILA\",\n      \"GRETA\",\n      \"RUTHIE\",\n      \"NELDA\",\n      \"MINERVA\",\n      \"LILLY\",\n      \"TERRIE\",\n      \"LETHA\",\n      \"HILARY\",\n      \"ESTELA\",\n      \"VALARIE\",\n      \"BRIANNA\",\n      \"ROSALYN\",\n      \"EARLINE\",\n      \"CATALINA\",\n      \"AVA\",\n      \"MIA\",\n      \"CLARISSA\",\n      \"LIDIA\",\n      \"CORRINE\",\n      \"ALEXANDRIA\",\n      \"CONCEPCION\",\n      \"TIA\",\n      \"SHARRON\",\n      \"RAE\",\n      \"DONA\",\n      \"ERICKA\",\n      \"JAMI\",\n      \"ELNORA\",\n      \"CHANDRA\",\n      \"LENORE\",\n      \"NEVA\",\n      \"MARYLOU\",\n      \"MELISA\",\n      \"TABATHA\",\n      \"SERENA\",\n      \"AVIS\",\n      \"ALLIE\",\n      \"SOFIA\",\n      \"JEANIE\",\n      \"ODESSA\",\n      \"NANNIE\",\n      \"HARRIETT\",\n      \"LORAINE\",\n      \"PENELOPE\",\n      \"MILAGROS\",\n      \"EMILIA\",\n      \"BENITA\",\n      \"ALLYSON\",\n      \"ASHLEE\",\n      \"TANIA\",\n      \"TOMMIE\",\n      \"ESMERALDA\",\n      \"KARINA\",\n      \"EVE\",\n      \"PEARLIE\",\n      \"ZELMA\",\n      \"MALINDA\",\n      \"NOREEN\",\n      \"TAMEKA\",\n      \"SAUNDRA\",\n      \"HILLARY\",\n      \"AMIE\",\n      \"ALTHEA\",\n      \"ROSALINDA\",\n      \"JORDAN\",\n      \"LILIA\",\n      \"ALANA\",\n      \"GAY\",\n      \"CLARE\",\n      \"ALEJANDRA\",\n      \"ELINOR\",\n      \"MICHAEL\",\n      \"LORRIE\",\n      \"JERRI\",\n      \"DARCY\",\n      \"EARNESTINE\",\n      \"CARMELLA\",\n      \"TAYLOR\",\n      \"NOEMI\",\n      \"MARCIE\",\n      \"LIZA\",\n      \"ANNABELLE\",\n      \"LOUISA\",\n      \"EARLENE\",\n      \"MALLORY\",\n      \"CARLENE\",\n      \"NITA\",\n      \"SELENA\",\n      \"TANISHA\",\n      \"KATY\",\n      \"JULIANNE\",\n      \"JOHN\",\n      \"LAKISHA\",\n      \"EDWINA\",\n      \"MARICELA\",\n      \"MARGERY\",\n      \"KENYA\",\n      \"DOLLIE\",\n      \"ROXIE\",\n      \"ROSLYN\",\n      \"KATHRINE\",\n      \"NANETTE\",\n      \"CHARMAINE\",\n      \"LAVONNE\",\n      \"ILENE\",\n      \"KRIS\",\n      \"TAMMI\",\n      \"SUZETTE\",\n      \"CORINE\",\n      \"KAYE\",\n      \"JERRY\",\n      \"MERLE\",\n      \"CHRYSTAL\",\n      \"LINA\",\n      \"DEANNE\",\n      \"LILIAN\",\n      \"JULIANA\",\n      \"ALINE\",\n      \"LUANN\",\n      \"KASEY\",\n      \"MARYANNE\",\n      \"EVANGELINE\",\n      \"COLETTE\",\n      \"MELVA\",\n      \"LAWANDA\",\n      \"YESENIA\",\n      \"NADIA\",\n      \"MADGE\",\n      \"KATHIE\",\n      \"EDDIE\",\n      \"OPHELIA\",\n      \"VALERIA\",\n      \"NONA\",\n      \"MITZI\",\n      \"MARI\",\n      \"GEORGETTE\",\n      \"CLAUDINE\",\n      \"FRAN\",\n      \"ALISSA\",\n      \"ROSEANN\",\n      \"LAKEISHA\",\n      \"SUSANNA\",\n      \"REVA\",\n      \"DEIDRE\",\n      \"CHASITY\",\n      \"SHEREE\",\n      \"CARLY\",\n      \"JAMES\",\n      \"ELVIA\",\n      \"ALYCE\",\n      \"DEIRDRE\",\n      \"GENA\",\n      \"BRIANA\",\n      \"ARACELI\",\n      \"KATELYN\",\n      \"ROSANNE\",\n      \"WENDI\",\n      \"TESSA\",\n      \"BERTA\",\n      \"MARVA\",\n      \"IMELDA\",\n      \"MARIETTA\",\n      \"MARCI\",\n      \"LEONOR\",\n      \"ARLINE\",\n      \"SASHA\",\n      \"MADELYN\",\n      \"JANNA\",\n      \"JULIETTE\",\n      \"DEENA\",\n      \"AURELIA\",\n      \"JOSEFA\",\n      \"AUGUSTA\",\n      \"LILIANA\",\n      \"YOUNG\",\n      \"CHRISTIAN\",\n      \"LESSIE\",\n      \"AMALIA\",\n      \"SAVANNAH\",\n      \"ANASTASIA\",\n      \"VILMA\",\n      \"NATALIA\",\n      \"ROSELLA\",\n      \"LYNNETTE\",\n      \"CORINA\",\n      \"ALFREDA\",\n      \"LEANNA\",\n      \"CAREY\",\n      \"AMPARO\",\n      \"COLEEN\",\n      \"TAMRA\",\n      \"AISHA\",\n      \"WILDA\",\n      \"KARYN\",\n      \"CHERRY\",\n      \"QUEEN\",\n      \"MAURA\",\n      \"MAI\",\n      \"EVANGELINA\",\n      \"ROSANNA\",\n      \"HALLIE\",\n      \"ERNA\",\n      \"ENID\",\n      \"MARIANA\",\n      \"LACY\",\n      \"JULIET\",\n      \"JACKLYN\",\n      \"FREIDA\",\n      \"MADELEINE\",\n      \"MARA\",\n      \"HESTER\",\n      \"CATHRYN\",\n      \"LELIA\",\n      \"CASANDRA\",\n      \"BRIDGETT\",\n      \"ANGELITA\",\n      \"JANNIE\",\n      \"DIONNE\",\n      \"ANNMARIE\",\n      \"KATINA\",\n      \"BERYL\",\n      \"PHOEBE\",\n      \"MILLICENT\",\n      \"KATHERYN\",\n      \"DIANN\",\n      \"CARISSA\",\n      \"MARYELLEN\",\n      \"LIZ\",\n      \"LAURI\",\n      \"HELGA\",\n      \"GILDA\",\n      \"ADRIAN\",\n      \"RHEA\",\n      \"MARQUITA\",\n      \"HOLLIE\",\n      \"TISHA\",\n      \"TAMERA\",\n      \"ANGELIQUE\",\n      \"FRANCESCA\",\n      \"BRITNEY\",\n      \"KAITLIN\",\n      \"LOLITA\",\n      \"FLORINE\",\n      \"ROWENA\",\n      \"REYNA\",\n      \"TWILA\",\n      \"FANNY\",\n      \"JANELL\",\n      \"INES\",\n      \"CONCETTA\",\n      \"BERTIE\",\n      \"ALBA\",\n      \"BRIGITTE\",\n      \"ALYSON\",\n      \"VONDA\",\n      \"PANSY\",\n      \"ELBA\",\n      \"NOELLE\",\n      \"LETITIA\",\n      \"KITTY\",\n      \"DEANN\",\n      \"BRANDIE\",\n      \"LOUELLA\",\n      \"LETA\",\n      \"FELECIA\",\n      \"SHARLENE\",\n      \"LESA\",\n      \"BEVERLEY\",\n      \"ROBERT\",\n      \"ISABELLA\",\n      \"HERMINIA\",\n      \"TERRA\",\n      \"CELINA\",\n    ];\n    this.maleFirstNames = [\n      \"JAMES\",\n      \"JOHN\",\n      \"ROBERT\",\n      \"MICHAEL\",\n      \"WILLIAM\",\n      \"DAVID\",\n      \"RICHARD\",\n      \"CHARLES\",\n      \"JOSEPH\",\n      \"THOMAS\",\n      \"CHRISTOPHER\",\n      \"DANIEL\",\n      \"PAUL\",\n      \"MARK\",\n      \"DONALD\",\n      \"GEORGE\",\n      \"KENNETH\",\n      \"STEVEN\",\n      \"EDWARD\",\n      \"BRIAN\",\n      \"RONALD\",\n      \"ANTHONY\",\n      \"KEVIN\",\n      \"JASON\",\n      \"MATTHEW\",\n      \"GARY\",\n      \"TIMOTHY\",\n      \"JOSE\",\n      \"LARRY\",\n      \"JEFFREY\",\n      \"FRANK\",\n      \"SCOTT\",\n      \"ERIC\",\n      \"STEPHEN\",\n      \"ANDREW\",\n      \"RAYMOND\",\n      \"GREGORY\",\n      \"JOSHUA\",\n      \"JERRY\",\n      \"DENNIS\",\n      \"WALTER\",\n      \"PATRICK\",\n      \"PETER\",\n      \"HAROLD\",\n      \"DOUGLAS\",\n      \"HENRY\",\n      \"CARL\",\n      \"ARTHUR\",\n      \"RYAN\",\n      \"ROGER\",\n      \"JOE\",\n      \"JUAN\",\n      \"JACK\",\n      \"ALBERT\",\n      \"JONATHAN\",\n      \"JUSTIN\",\n      \"TERRY\",\n      \"GERALD\",\n      \"KEITH\",\n      \"SAMUEL\",\n      \"WILLIE\",\n      \"RALPH\",\n      \"LAWRENCE\",\n      \"NICHOLAS\",\n      \"ROY\",\n      \"BENJAMIN\",\n      \"BRUCE\",\n      \"BRANDON\",\n      \"ADAM\",\n      \"HARRY\",\n      \"FRED\",\n      \"WAYNE\",\n      \"BILLY\",\n      \"STEVE\",\n      \"LOUIS\",\n      \"JEREMY\",\n      \"AARON\",\n      \"RANDY\",\n      \"HOWARD\",\n      \"EUGENE\",\n      \"CARLOS\",\n      \"RUSSELL\",\n      \"BOBBY\",\n      \"VICTOR\",\n      \"MARTIN\",\n      \"ERNEST\",\n      \"PHILLIP\",\n      \"TODD\",\n      \"JESSE\",\n      \"CRAIG\",\n      \"ALAN\",\n      \"SHAWN\",\n      \"CLARENCE\",\n      \"SEAN\",\n      \"PHILIP\",\n      \"CHRIS\",\n      \"JOHNNY\",\n      \"EARL\",\n      \"JIMMY\",\n      \"ANTONIO\",\n      \"DANNY\",\n      \"BRYAN\",\n      \"TONY\",\n      \"LUIS\",\n      \"MIKE\",\n      \"STANLEY\",\n      \"LEONARD\",\n      \"NATHAN\",\n      \"DALE\",\n      \"MANUEL\",\n      \"RODNEY\",\n      \"CURTIS\",\n      \"NORMAN\",\n      \"ALLEN\",\n      \"MARVIN\",\n      \"VINCENT\",\n      \"GLENN\",\n      \"JEFFERY\",\n      \"TRAVIS\",\n      \"JEFF\",\n      \"CHAD\",\n      \"JACOB\",\n      \"LEE\",\n      \"MELVIN\",\n      \"ALFRED\",\n      \"KYLE\",\n      \"FRANCIS\",\n      \"BRADLEY\",\n      \"JESUS\",\n      \"HERBERT\",\n      \"FREDERICK\",\n      \"RAY\",\n      \"JOEL\",\n      \"EDWIN\",\n      \"DON\",\n      \"EDDIE\",\n      \"RICKY\",\n      \"TROY\",\n      \"RANDALL\",\n      \"BARRY\",\n      \"ALEXANDER\",\n      \"BERNARD\",\n      \"MARIO\",\n      \"LEROY\",\n      \"FRANCISCO\",\n      \"MARCUS\",\n      \"MICHEAL\",\n      \"THEODORE\",\n      \"CLIFFORD\",\n      \"MIGUEL\",\n      \"OSCAR\",\n      \"JAY\",\n      \"JIM\",\n      \"TOM\",\n      \"CALVIN\",\n      \"ALEX\",\n      \"JON\",\n      \"RONNIE\",\n      \"BILL\",\n      \"LLOYD\",\n      \"TOMMY\",\n      \"LEON\",\n      \"DEREK\",\n      \"WARREN\",\n      \"DARRELL\",\n      \"JEROME\",\n      \"FLOYD\",\n      \"LEO\",\n      \"ALVIN\",\n      \"TIM\",\n      \"WESLEY\",\n      \"GORDON\",\n      \"DEAN\",\n      \"GREG\",\n      \"JORGE\",\n      \"DUSTIN\",\n      \"PEDRO\",\n      \"DERRICK\",\n      \"DAN\",\n      \"LEWIS\",\n      \"ZACHARY\",\n      \"COREY\",\n      \"HERMAN\",\n      \"MAURICE\",\n      \"VERNON\",\n      \"ROBERTO\",\n      \"CLYDE\",\n      \"GLEN\",\n      \"HECTOR\",\n      \"SHANE\",\n      \"RICARDO\",\n      \"SAM\",\n      \"RICK\",\n      \"LESTER\",\n      \"BRENT\",\n      \"RAMON\",\n      \"CHARLIE\",\n      \"TYLER\",\n      \"GILBERT\",\n      \"GENE\",\n      \"MARC\",\n      \"REGINALD\",\n      \"RUBEN\",\n      \"BRETT\",\n      \"ANGEL\",\n      \"NATHANIEL\",\n      \"RAFAEL\",\n      \"LESLIE\",\n      \"EDGAR\",\n      \"MILTON\",\n      \"RAUL\",\n      \"BEN\",\n      \"CHESTER\",\n      \"CECIL\",\n      \"DUANE\",\n      \"FRANKLIN\",\n      \"ANDRE\",\n      \"ELMER\",\n      \"BRAD\",\n      \"GABRIEL\",\n      \"RON\",\n      \"MITCHELL\",\n      \"ROLAND\",\n      \"ARNOLD\",\n      \"HARVEY\",\n      \"JARED\",\n      \"ADRIAN\",\n      \"KARL\",\n      \"CORY\",\n      \"CLAUDE\",\n      \"ERIK\",\n      \"DARRYL\",\n      \"JAMIE\",\n      \"NEIL\",\n      \"JESSIE\",\n      \"CHRISTIAN\",\n      \"JAVIER\",\n      \"FERNANDO\",\n      \"CLINTON\",\n      \"TED\",\n      \"MATHEW\",\n      \"TYRONE\",\n      \"DARREN\",\n      \"LONNIE\",\n      \"LANCE\",\n      \"CODY\",\n      \"JULIO\",\n      \"KELLY\",\n      \"KURT\",\n      \"ALLAN\",\n      \"NELSON\",\n      \"GUY\",\n      \"CLAYTON\",\n      \"HUGH\",\n      \"MAX\",\n      \"DWAYNE\",\n      \"DWIGHT\",\n      \"ARMANDO\",\n      \"FELIX\",\n      \"JIMMIE\",\n      \"EVERETT\",\n      \"JORDAN\",\n      \"IAN\",\n      \"WALLACE\",\n      \"KEN\",\n      \"BOB\",\n      \"JAIME\",\n      \"CASEY\",\n      \"ALFREDO\",\n      \"ALBERTO\",\n      \"DAVE\",\n      \"IVAN\",\n      \"JOHNNIE\",\n      \"SIDNEY\",\n      \"BYRON\",\n      \"JULIAN\",\n      \"ISAAC\",\n      \"MORRIS\",\n      \"CLIFTON\",\n      \"WILLARD\",\n      \"DARYL\",\n      \"ROSS\",\n      \"VIRGIL\",\n      \"ANDY\",\n      \"MARSHALL\",\n      \"SALVADOR\",\n      \"PERRY\",\n      \"KIRK\",\n      \"SERGIO\",\n      \"MARION\",\n      \"TRACY\",\n      \"SETH\",\n      \"KENT\",\n      \"TERRANCE\",\n      \"RENE\",\n      \"EDUARDO\",\n      \"TERRENCE\",\n      \"ENRIQUE\",\n      \"FREDDIE\",\n      \"WADE\",\n      \"AUSTIN\",\n      \"STUART\",\n      \"FREDRICK\",\n      \"ARTURO\",\n      \"ALEJANDRO\",\n      \"JACKIE\",\n      \"JOEY\",\n      \"NICK\",\n      \"LUTHER\",\n      \"WENDELL\",\n      \"JEREMIAH\",\n      \"EVAN\",\n      \"JULIUS\",\n      \"DANA\",\n      \"DONNIE\",\n      \"OTIS\",\n      \"SHANNON\",\n      \"TREVOR\",\n      \"OLIVER\",\n      \"LUKE\",\n      \"HOMER\",\n      \"GERARD\",\n      \"DOUG\",\n      \"KENNY\",\n      \"HUBERT\",\n      \"ANGELO\",\n      \"SHAUN\",\n      \"LYLE\",\n      \"MATT\",\n      \"LYNN\",\n      \"ALFONSO\",\n      \"ORLANDO\",\n      \"REX\",\n      \"CARLTON\",\n      \"ERNESTO\",\n      \"CAMERON\",\n      \"NEAL\",\n      \"PABLO\",\n      \"LORENZO\",\n      \"OMAR\",\n      \"WILBUR\",\n      \"BLAKE\",\n      \"GRANT\",\n      \"HORACE\",\n      \"RODERICK\",\n      \"KERRY\",\n      \"ABRAHAM\",\n      \"WILLIS\",\n      \"RICKEY\",\n      \"JEAN\",\n      \"IRA\",\n      \"ANDRES\",\n      \"CESAR\",\n      \"JOHNATHAN\",\n      \"MALCOLM\",\n      \"RUDOLPH\",\n      \"DAMON\",\n      \"KELVIN\",\n      \"RUDY\",\n      \"PRESTON\",\n      \"ALTON\",\n      \"ARCHIE\",\n      \"MARCO\",\n      \"WM\",\n      \"PETE\",\n      \"RANDOLPH\",\n      \"GARRY\",\n      \"GEOFFREY\",\n      \"JONATHON\",\n      \"FELIPE\",\n      \"BENNIE\",\n      \"GERARDO\",\n      \"ED\",\n      \"DOMINIC\",\n      \"ROBIN\",\n      \"LOREN\",\n      \"DELBERT\",\n      \"COLIN\",\n      \"GUILLERMO\",\n      \"EARNEST\",\n      \"LUCAS\",\n      \"BENNY\",\n      \"NOEL\",\n      \"SPENCER\",\n      \"RODOLFO\",\n      \"MYRON\",\n      \"EDMUND\",\n      \"GARRETT\",\n      \"SALVATORE\",\n      \"CEDRIC\",\n      \"LOWELL\",\n      \"GREGG\",\n      \"SHERMAN\",\n      \"WILSON\",\n      \"DEVIN\",\n      \"SYLVESTER\",\n      \"KIM\",\n      \"ROOSEVELT\",\n      \"ISRAEL\",\n      \"JERMAINE\",\n      \"FORREST\",\n      \"WILBERT\",\n      \"LELAND\",\n      \"SIMON\",\n      \"GUADALUPE\",\n      \"CLARK\",\n      \"IRVING\",\n      \"CARROLL\",\n      \"BRYANT\",\n      \"OWEN\",\n      \"RUFUS\",\n      \"WOODROW\",\n      \"SAMMY\",\n      \"KRISTOPHER\",\n      \"MACK\",\n      \"LEVI\",\n      \"MARCOS\",\n      \"GUSTAVO\",\n      \"JAKE\",\n      \"LIONEL\",\n      \"MARTY\",\n      \"TAYLOR\",\n      \"ELLIS\",\n      \"DALLAS\",\n      \"GILBERTO\",\n      \"CLINT\",\n      \"NICOLAS\",\n      \"LAURENCE\",\n      \"ISMAEL\",\n      \"ORVILLE\",\n      \"DREW\",\n      \"JODY\",\n      \"ERVIN\",\n      \"DEWEY\",\n      \"AL\",\n      \"WILFRED\",\n      \"JOSH\",\n      \"HUGO\",\n      \"IGNACIO\",\n      \"CALEB\",\n      \"TOMAS\",\n      \"SHELDON\",\n      \"ERICK\",\n      \"FRANKIE\",\n      \"STEWART\",\n      \"DOYLE\",\n      \"DARREL\",\n      \"ROGELIO\",\n      \"TERENCE\",\n      \"SANTIAGO\",\n      \"ALONZO\",\n      \"ELIAS\",\n      \"BERT\",\n      \"ELBERT\",\n      \"RAMIRO\",\n      \"CONRAD\",\n      \"PAT\",\n      \"NOAH\",\n      \"GRADY\",\n      \"PHIL\",\n      \"CORNELIUS\",\n      \"LAMAR\",\n      \"ROLANDO\",\n      \"CLAY\",\n      \"PERCY\",\n      \"DEXTER\",\n      \"BRADFORD\",\n      \"MERLE\",\n      \"DARIN\",\n      \"AMOS\",\n      \"TERRELL\",\n      \"MOSES\",\n      \"IRVIN\",\n      \"SAUL\",\n      \"ROMAN\",\n      \"DARNELL\",\n      \"RANDAL\",\n      \"TOMMIE\",\n      \"TIMMY\",\n      \"DARRIN\",\n      \"WINSTON\",\n      \"BRENDAN\",\n      \"TOBY\",\n      \"VAN\",\n      \"ABEL\",\n      \"DOMINICK\",\n      \"BOYD\",\n      \"COURTNEY\",\n      \"JAN\",\n      \"EMILIO\",\n      \"ELIJAH\",\n      \"CARY\",\n      \"DOMINGO\",\n      \"SANTOS\",\n      \"AUBREY\",\n      \"EMMETT\",\n      \"MARLON\",\n      \"EMANUEL\",\n      \"JERALD\",\n      \"EDMOND\",\n      \"EMIL\",\n      \"DEWAYNE\",\n      \"WILL\",\n      \"OTTO\",\n      \"TEDDY\",\n      \"REYNALDO\",\n      \"BRET\",\n      \"MORGAN\",\n      \"JESS\",\n      \"TRENT\",\n      \"HUMBERTO\",\n      \"EMMANUEL\",\n      \"STEPHAN\",\n      \"LOUIE\",\n      \"VICENTE\",\n      \"LAMONT\",\n      \"STACY\",\n      \"GARLAND\",\n      \"MILES\",\n      \"MICAH\",\n      \"EFRAIN\",\n      \"BILLIE\",\n      \"LOGAN\",\n      \"HEATH\",\n      \"RODGER\",\n      \"HARLEY\",\n      \"DEMETRIUS\",\n      \"ETHAN\",\n      \"ELDON\",\n      \"ROCKY\",\n      \"PIERRE\",\n      \"JUNIOR\",\n      \"FREDDY\",\n      \"ELI\",\n      \"BRYCE\",\n      \"ANTOINE\",\n      \"ROBBIE\",\n      \"KENDALL\",\n      \"ROYCE\",\n      \"STERLING\",\n      \"MICKEY\",\n      \"CHASE\",\n      \"GROVER\",\n      \"ELTON\",\n      \"CLEVELAND\",\n      \"DYLAN\",\n      \"CHUCK\",\n      \"DAMIAN\",\n      \"REUBEN\",\n      \"STAN\",\n      \"AUGUST\",\n      \"LEONARDO\",\n      \"JASPER\",\n      \"RUSSEL\",\n      \"ERWIN\",\n      \"BENITO\",\n      \"HANS\",\n      \"MONTE\",\n      \"BLAINE\",\n      \"ERNIE\",\n      \"CURT\",\n      \"QUENTIN\",\n      \"AGUSTIN\",\n      \"MURRAY\",\n      \"JAMAL\",\n      \"DEVON\",\n      \"ADOLFO\",\n      \"HARRISON\",\n      \"TYSON\",\n      \"BURTON\",\n      \"BRADY\",\n      \"ELLIOTT\",\n      \"WILFREDO\",\n      \"BART\",\n      \"JARROD\",\n      \"VANCE\",\n      \"DENIS\",\n      \"DAMIEN\",\n      \"JOAQUIN\",\n      \"HARLAN\",\n      \"DESMOND\",\n      \"ELLIOT\",\n      \"DARWIN\",\n      \"ASHLEY\",\n      \"GREGORIO\",\n      \"BUDDY\",\n      \"XAVIER\",\n      \"KERMIT\",\n      \"ROSCOE\",\n      \"ESTEBAN\",\n      \"ANTON\",\n      \"SOLOMON\",\n      \"SCOTTY\",\n      \"NORBERT\",\n      \"ELVIN\",\n      \"WILLIAMS\",\n      \"NOLAN\",\n      \"CAREY\",\n      \"ROD\",\n      \"QUINTON\",\n      \"HAL\",\n      \"BRAIN\",\n      \"ROB\",\n      \"ELWOOD\",\n      \"KENDRICK\",\n      \"DARIUS\",\n      \"MOISES\",\n      \"SON\",\n      \"MARLIN\",\n      \"FIDEL\",\n      \"THADDEUS\",\n      \"CLIFF\",\n      \"MARCEL\",\n      \"ALI\",\n      \"JACKSON\",\n      \"RAPHAEL\",\n      \"BRYON\",\n      \"ARMAND\",\n      \"ALVARO\",\n      \"JEFFRY\",\n      \"DANE\",\n      \"JOESPH\",\n      \"THURMAN\",\n      \"NED\",\n      \"SAMMIE\",\n      \"RUSTY\",\n      \"MICHEL\",\n      \"MONTY\",\n      \"RORY\",\n      \"FABIAN\",\n      \"REGGIE\",\n      \"MASON\",\n      \"GRAHAM\",\n      \"KRIS\",\n      \"ISAIAH\",\n      \"VAUGHN\",\n      \"GUS\",\n      \"AVERY\",\n      \"LOYD\",\n      \"DIEGO\",\n      \"ALEXIS\",\n      \"ADOLPH\",\n      \"NORRIS\",\n      \"MILLARD\",\n      \"ROCCO\",\n      \"GONZALO\",\n      \"DERICK\",\n      \"RODRIGO\",\n      \"GERRY\",\n      \"STACEY\",\n      \"CARMEN\",\n      \"WILEY\",\n      \"RIGOBERTO\",\n      \"ALPHONSO\",\n      \"TY\",\n      \"SHELBY\",\n      \"RICKIE\",\n      \"NOE\",\n      \"VERN\",\n      \"BOBBIE\",\n      \"REED\",\n      \"JEFFERSON\",\n      \"ELVIS\",\n      \"BERNARDO\",\n      \"MAURICIO\",\n      \"HIRAM\",\n      \"DONOVAN\",\n      \"BASIL\",\n      \"RILEY\",\n      \"OLLIE\",\n      \"NICKOLAS\",\n      \"MAYNARD\",\n      \"SCOT\",\n      \"VINCE\",\n      \"QUINCY\",\n      \"EDDY\",\n      \"SEBASTIAN\",\n      \"FEDERICO\",\n      \"ULYSSES\",\n      \"HERIBERTO\",\n      \"DONNELL\",\n      \"COLE\",\n      \"DENNY\",\n      \"DAVIS\",\n      \"GAVIN\",\n      \"EMERY\",\n      \"WARD\",\n      \"ROMEO\",\n      \"JAYSON\",\n      \"DION\",\n      \"DANTE\",\n      \"CLEMENT\",\n      \"COY\",\n      \"ODELL\",\n      \"MAXWELL\",\n      \"JARVIS\",\n      \"BRUNO\",\n      \"ISSAC\",\n      \"MARY\",\n      \"DUDLEY\",\n      \"BROCK\",\n      \"SANFORD\",\n      \"COLBY\",\n      \"CARMELO\",\n      \"BARNEY\",\n      \"NESTOR\",\n      \"HOLLIS\",\n      \"STEFAN\",\n      \"DONNY\",\n      \"ART\",\n      \"LINWOOD\",\n      \"BEAU\",\n      \"WELDON\",\n      \"GALEN\",\n      \"ISIDRO\",\n      \"TRUMAN\",\n      \"DELMAR\",\n      \"JOHNATHON\",\n      \"SILAS\",\n      \"FREDERIC\",\n      \"DICK\",\n      \"KIRBY\",\n      \"IRWIN\",\n      \"CRUZ\",\n      \"MERLIN\",\n      \"MERRILL\",\n      \"CHARLEY\",\n      \"MARCELINO\",\n      \"LANE\",\n      \"HARRIS\",\n      \"CLEO\",\n      \"CARLO\",\n      \"TRENTON\",\n      \"KURTIS\",\n      \"HUNTER\",\n      \"AURELIO\",\n      \"WINFRED\",\n      \"VITO\",\n      \"COLLIN\",\n      \"DENVER\",\n      \"CARTER\",\n      \"LEONEL\",\n      \"EMORY\",\n      \"PASQUALE\",\n      \"MOHAMMAD\",\n      \"MARIANO\",\n      \"DANIAL\",\n      \"BLAIR\",\n      \"LANDON\",\n      \"DIRK\",\n      \"BRANDEN\",\n      \"ADAN\",\n      \"NUMBERS\",\n      \"CLAIR\",\n      \"BUFORD\",\n      \"GERMAN\",\n      \"BERNIE\",\n      \"WILMER\",\n      \"JOAN\",\n      \"EMERSON\",\n      \"ZACHERY\",\n      \"FLETCHER\",\n      \"JACQUES\",\n      \"ERROL\",\n      \"DALTON\",\n      \"MONROE\",\n      \"JOSUE\",\n      \"DOMINIQUE\",\n      \"EDWARDO\",\n      \"BOOKER\",\n      \"WILFORD\",\n      \"SONNY\",\n      \"SHELTON\",\n      \"CARSON\",\n      \"THERON\",\n      \"RAYMUNDO\",\n      \"DAREN\",\n      \"TRISTAN\",\n      \"HOUSTON\",\n      \"ROBBY\",\n      \"LINCOLN\",\n      \"JAME\",\n      \"GENARO\",\n      \"GALE\",\n      \"BENNETT\",\n      \"OCTAVIO\",\n      \"CORNELL\",\n      \"LAVERNE\",\n      \"HUNG\",\n      \"ARRON\",\n      \"ANTONY\",\n      \"HERSCHEL\",\n      \"ALVA\",\n      \"GIOVANNI\",\n      \"GARTH\",\n      \"CYRUS\",\n      \"CYRIL\",\n      \"RONNY\",\n      \"STEVIE\",\n      \"LON\",\n      \"FREEMAN\",\n      \"ERIN\",\n      \"DUNCAN\",\n      \"KENNITH\",\n      \"CARMINE\",\n      \"AUGUSTINE\",\n      \"YOUNG\",\n      \"ERICH\",\n      \"CHADWICK\",\n      \"WILBURN\",\n      \"RUSS\",\n      \"REID\",\n      \"MYLES\",\n      \"ANDERSON\",\n      \"MORTON\",\n      \"JONAS\",\n      \"FOREST\",\n      \"MITCHEL\",\n      \"MERVIN\",\n      \"ZANE\",\n      \"RICH\",\n      \"JAMEL\",\n      \"LAZARO\",\n      \"ALPHONSE\",\n      \"RANDELL\",\n      \"MAJOR\",\n      \"JOHNIE\",\n      \"JARRETT\",\n      \"BROOKS\",\n      \"ARIEL\",\n      \"ABDUL\",\n      \"DUSTY\",\n      \"LUCIANO\",\n      \"LINDSEY\",\n      \"TRACEY\",\n      \"SEYMOUR\",\n      \"SCOTTIE\",\n      \"EUGENIO\",\n      \"MOHAMMED\",\n      \"SANDY\",\n      \"VALENTIN\",\n      \"CHANCE\",\n      \"ARNULFO\",\n      \"LUCIEN\",\n      \"FERDINAND\",\n      \"THAD\",\n      \"EZRA\",\n      \"SYDNEY\",\n      \"ALDO\",\n      \"RUBIN\",\n      \"ROYAL\",\n      \"MITCH\",\n      \"EARLE\",\n      \"ABE\",\n      \"WYATT\",\n      \"MARQUIS\",\n      \"LANNY\",\n      \"KAREEM\",\n      \"JAMAR\",\n      \"BORIS\",\n      \"ISIAH\",\n      \"EMILE\",\n      \"ELMO\",\n      \"ARON\",\n      \"LEOPOLDO\",\n      \"EVERETTE\",\n      \"JOSEF\",\n      \"GAIL\",\n      \"ELOY\",\n      \"DORIAN\",\n      \"RODRICK\",\n      \"REINALDO\",\n      \"LUCIO\",\n      \"JERROD\",\n      \"WESTON\",\n      \"HERSHEL\",\n      \"BARTON\",\n      \"PARKER\",\n      \"LEMUEL\",\n      \"LAVERN\",\n      \"BURT\",\n      \"JULES\",\n      \"GIL\",\n      \"ELISEO\",\n      \"AHMAD\",\n      \"NIGEL\",\n      \"EFREN\",\n      \"ANTWAN\",\n      \"ALDEN\",\n      \"MARGARITO\",\n      \"COLEMAN\",\n      \"REFUGIO\",\n      \"DINO\",\n      \"OSVALDO\",\n      \"LES\",\n      \"DEANDRE\",\n      \"NORMAND\",\n      \"KIETH\",\n      \"IVORY\",\n      \"ANDREA\",\n      \"TREY\",\n      \"NORBERTO\",\n      \"NAPOLEON\",\n      \"JEROLD\",\n      \"FRITZ\",\n      \"ROSENDO\",\n      \"MILFORD\",\n      \"SANG\",\n      \"DEON\",\n      \"CHRISTOPER\",\n      \"ALFONZO\",\n      \"LYMAN\",\n      \"JOSIAH\",\n      \"BRANT\",\n      \"WILTON\",\n      \"RICO\",\n      \"JAMAAL\",\n      \"DEWITT\",\n      \"CAROL\",\n      \"BRENTON\",\n      \"YONG\",\n      \"OLIN\",\n      \"FOSTER\",\n      \"FAUSTINO\",\n      \"CLAUDIO\",\n      \"JUDSON\",\n      \"GINO\",\n      \"EDGARDO\",\n      \"BERRY\",\n      \"ALEC\",\n      \"TANNER\",\n      \"JARRED\",\n      \"DONN\",\n      \"TRINIDAD\",\n      \"TAD\",\n      \"SHIRLEY\",\n      \"PRINCE\",\n      \"PORFIRIO\",\n      \"ODIS\",\n      \"MARIA\",\n      \"LENARD\",\n      \"CHAUNCEY\",\n      \"CHANG\",\n      \"TOD\",\n      \"MEL\",\n      \"MARCELO\",\n      \"KORY\",\n      \"AUGUSTUS\",\n      \"KEVEN\",\n      \"HILARIO\",\n      \"BUD\",\n      \"SAL\",\n      \"ROSARIO\",\n      \"ORVAL\",\n      \"MAURO\",\n      \"DANNIE\",\n      \"ZACHARIAH\",\n      \"OLEN\",\n      \"ANIBAL\",\n      \"MILO\",\n      \"JED\",\n      \"FRANCES\",\n      \"THANH\",\n      \"DILLON\",\n      \"AMADO\",\n      \"NEWTON\",\n      \"CONNIE\",\n      \"LENNY\",\n      \"TORY\",\n      \"RICHIE\",\n      \"LUPE\",\n      \"HORACIO\",\n      \"BRICE\",\n      \"MOHAMED\",\n      \"DELMER\",\n      \"DARIO\",\n      \"REYES\",\n      \"DEE\",\n      \"MAC\",\n      \"JONAH\",\n      \"JERROLD\",\n      \"ROBT\",\n      \"HANK\",\n      \"SUNG\",\n      \"RUPERT\",\n      \"ROLLAND\",\n      \"KENTON\",\n      \"DAMION\",\n      \"CHI\",\n      \"ANTONE\",\n      \"WALDO\",\n      \"FREDRIC\",\n      \"BRADLY\",\n      \"QUINN\",\n      \"KIP\",\n      \"BURL\",\n      \"WALKER\",\n      \"TYREE\",\n      \"JEFFEREY\",\n      \"AHMED\",\n    ];\n    this.allFirstNames = this.femaleFirstNames.concat(this.maleFirstNames);\n    this.lastNames = [\n      \"SMITH\",\n      \"JOHNSON\",\n      \"WILLIAMS\",\n      \"JONES\",\n      \"BROWN\",\n      \"DAVIS\",\n      \"MILLER\",\n      \"WILSON\",\n      \"MOORE\",\n      \"TAYLOR\",\n      \"ANDERSON\",\n      \"THOMAS\",\n      \"JACKSON\",\n      \"WHITE\",\n      \"HARRIS\",\n      \"MARTIN\",\n      \"THOMPSON\",\n      \"GARCIA\",\n      \"MARTINEZ\",\n      \"ROBINSON\",\n      \"CLARK\",\n      \"RODRIGUEZ\",\n      \"LEWIS\",\n      \"LEE\",\n      \"WALKER\",\n      \"HALL\",\n      \"ALLEN\",\n      \"YOUNG\",\n      \"HERNANDEZ\",\n      \"KING\",\n      \"WRIGHT\",\n      \"LOPEZ\",\n      \"HILL\",\n      \"SCOTT\",\n      \"GREEN\",\n      \"ADAMS\",\n      \"BAKER\",\n      \"GONZALEZ\",\n      \"NELSON\",\n      \"CARTER\",\n      \"MITCHELL\",\n      \"PEREZ\",\n      \"ROBERTS\",\n      \"TURNER\",\n      \"PHILLIPS\",\n      \"CAMPBELL\",\n      \"PARKER\",\n      \"EVANS\",\n      \"EDWARDS\",\n      \"COLLINS\",\n      \"STEWART\",\n      \"SANCHEZ\",\n      \"MORRIS\",\n      \"ROGERS\",\n      \"REED\",\n      \"COOK\",\n      \"MORGAN\",\n      \"BELL\",\n      \"MURPHY\",\n      \"BAILEY\",\n      \"RIVERA\",\n      \"COOPER\",\n      \"RICHARDSON\",\n      \"COX\",\n      \"HOWARD\",\n      \"WARD\",\n      \"TORRES\",\n      \"PETERSON\",\n      \"GRAY\",\n      \"RAMIREZ\",\n      \"JAMES\",\n      \"WATSON\",\n      \"BROOKS\",\n      \"KELLY\",\n      \"SANDERS\",\n      \"PRICE\",\n      \"BENNETT\",\n      \"WOOD\",\n      \"BARNES\",\n      \"ROSS\",\n      \"HENDERSON\",\n      \"COLEMAN\",\n      \"JENKINS\",\n      \"PERRY\",\n      \"POWELL\",\n      \"LONG\",\n      \"PATTERSON\",\n      \"HUGHES\",\n      \"FLORES\",\n      \"WASHINGTON\",\n      \"BUTLER\",\n      \"SIMMONS\",\n      \"FOSTER\",\n      \"GONZALES\",\n      \"BRYANT\",\n      \"ALEXANDER\",\n      \"RUSSELL\",\n      \"GRIFFIN\",\n      \"DIAZ\",\n      \"HAYES\",\n      \"MYERS\",\n      \"FORD\",\n      \"HAMILTON\",\n      \"GRAHAM\",\n      \"SULLIVAN\",\n      \"WALLACE\",\n      \"WOODS\",\n      \"COLE\",\n      \"WEST\",\n      \"JORDAN\",\n      \"OWENS\",\n      \"REYNOLDS\",\n      \"FISHER\",\n      \"ELLIS\",\n      \"HARRISON\",\n      \"GIBSON\",\n      \"MCDONALD\",\n      \"CRUZ\",\n      \"MARSHALL\",\n      \"ORTIZ\",\n      \"GOMEZ\",\n      \"MURRAY\",\n      \"FREEMAN\",\n      \"WELLS\",\n      \"WEBB\",\n      \"SIMPSON\",\n      \"STEVENS\",\n      \"TUCKER\",\n      \"PORTER\",\n      \"HUNTER\",\n      \"HICKS\",\n      \"CRAWFORD\",\n      \"HENRY\",\n      \"BOYD\",\n      \"MASON\",\n      \"MORALES\",\n      \"KENNEDY\",\n      \"WARREN\",\n      \"DIXON\",\n      \"RAMOS\",\n      \"REYES\",\n      \"BURNS\",\n      \"GORDON\",\n      \"SHAW\",\n      \"HOLMES\",\n      \"RICE\",\n      \"ROBERTSON\",\n      \"HUNT\",\n      \"BLACK\",\n      \"DANIELS\",\n      \"PALMER\",\n      \"MILLS\",\n      \"NICHOLS\",\n      \"GRANT\",\n      \"KNIGHT\",\n      \"FERGUSON\",\n      \"ROSE\",\n      \"STONE\",\n      \"HAWKINS\",\n      \"DUNN\",\n      \"PERKINS\",\n      \"HUDSON\",\n      \"SPENCER\",\n      \"GARDNER\",\n      \"STEPHENS\",\n      \"PAYNE\",\n      \"PIERCE\",\n      \"BERRY\",\n      \"MATTHEWS\",\n      \"ARNOLD\",\n      \"WAGNER\",\n      \"WILLIS\",\n      \"RAY\",\n      \"WATKINS\",\n      \"OLSON\",\n      \"CARROLL\",\n      \"DUNCAN\",\n      \"SNYDER\",\n      \"HART\",\n      \"CUNNINGHAM\",\n      \"BRADLEY\",\n      \"LANE\",\n      \"ANDREWS\",\n      \"RUIZ\",\n      \"HARPER\",\n      \"FOX\",\n      \"RILEY\",\n      \"ARMSTRONG\",\n      \"CARPENTER\",\n      \"WEAVER\",\n      \"GREENE\",\n      \"LAWRENCE\",\n      \"ELLIOTT\",\n      \"CHAVEZ\",\n      \"SIMS\",\n      \"AUSTIN\",\n      \"PETERS\",\n      \"KELLEY\",\n      \"FRANKLIN\",\n      \"LAWSON\",\n      \"FIELDS\",\n      \"GUTIERREZ\",\n      \"RYAN\",\n      \"SCHMIDT\",\n      \"CARR\",\n      \"VASQUEZ\",\n      \"CASTILLO\",\n      \"WHEELER\",\n      \"CHAPMAN\",\n      \"OLIVER\",\n      \"MONTGOMERY\",\n      \"RICHARDS\",\n      \"WILLIAMSON\",\n      \"JOHNSTON\",\n      \"BANKS\",\n      \"MEYER\",\n      \"BISHOP\",\n      \"MCCOY\",\n      \"HOWELL\",\n      \"ALVAREZ\",\n      \"MORRISON\",\n      \"HANSEN\",\n      \"FERNANDEZ\",\n      \"GARZA\",\n      \"HARVEY\",\n      \"LITTLE\",\n      \"BURTON\",\n      \"STANLEY\",\n      \"NGUYEN\",\n      \"GEORGE\",\n      \"JACOBS\",\n      \"REID\",\n      \"KIM\",\n      \"FULLER\",\n      \"LYNCH\",\n      \"DEAN\",\n      \"GILBERT\",\n      \"GARRETT\",\n      \"ROMERO\",\n      \"WELCH\",\n      \"LARSON\",\n      \"FRAZIER\",\n      \"BURKE\",\n      \"HANSON\",\n      \"DAY\",\n      \"MENDOZA\",\n      \"MORENO\",\n      \"BOWMAN\",\n      \"MEDINA\",\n      \"FOWLER\",\n      \"BREWER\",\n      \"HOFFMAN\",\n      \"CARLSON\",\n      \"SILVA\",\n      \"PEARSON\",\n      \"HOLLAND\",\n      \"DOUGLAS\",\n      \"FLEMING\",\n      \"JENSEN\",\n      \"VARGAS\",\n      \"BYRD\",\n      \"DAVIDSON\",\n      \"HOPKINS\",\n      \"MAY\",\n      \"TERRY\",\n      \"HERRERA\",\n      \"WADE\",\n      \"SOTO\",\n      \"WALTERS\",\n      \"CURTIS\",\n      \"NEAL\",\n      \"CALDWELL\",\n      \"LOWE\",\n      \"JENNINGS\",\n      \"BARNETT\",\n      \"GRAVES\",\n      \"JIMENEZ\",\n      \"HORTON\",\n      \"SHELTON\",\n      \"BARRETT\",\n      \"OBRIEN\",\n      \"CASTRO\",\n      \"SUTTON\",\n      \"GREGORY\",\n      \"MCKINNEY\",\n      \"LUCAS\",\n      \"MILES\",\n      \"CRAIG\",\n      \"RODRIQUEZ\",\n      \"CHAMBERS\",\n      \"HOLT\",\n      \"LAMBERT\",\n      \"FLETCHER\",\n      \"WATTS\",\n      \"BATES\",\n      \"HALE\",\n      \"RHODES\",\n      \"PENA\",\n      \"BECK\",\n      \"NEWMAN\",\n      \"HAYNES\",\n      \"MCDANIEL\",\n      \"MENDEZ\",\n      \"BUSH\",\n      \"VAUGHN\",\n      \"PARKS\",\n      \"DAWSON\",\n      \"SANTIAGO\",\n      \"NORRIS\",\n      \"HARDY\",\n      \"LOVE\",\n      \"STEELE\",\n      \"CURRY\",\n      \"POWERS\",\n      \"SCHULTZ\",\n      \"BARKER\",\n      \"GUZMAN\",\n      \"PAGE\",\n      \"MUNOZ\",\n      \"BALL\",\n      \"KELLER\",\n      \"CHANDLER\",\n      \"WEBER\",\n      \"LEONARD\",\n      \"WALSH\",\n      \"LYONS\",\n      \"RAMSEY\",\n      \"WOLFE\",\n      \"SCHNEIDER\",\n      \"MULLINS\",\n      \"BENSON\",\n      \"SHARP\",\n      \"BOWEN\",\n      \"DANIEL\",\n      \"BARBER\",\n      \"CUMMINGS\",\n      \"HINES\",\n      \"BALDWIN\",\n      \"GRIFFITH\",\n      \"VALDEZ\",\n      \"HUBBARD\",\n      \"SALAZAR\",\n      \"REEVES\",\n      \"WARNER\",\n      \"STEVENSON\",\n      \"BURGESS\",\n      \"SANTOS\",\n      \"TATE\",\n      \"CROSS\",\n      \"GARNER\",\n      \"MANN\",\n      \"MACK\",\n      \"MOSS\",\n      \"THORNTON\",\n      \"DENNIS\",\n      \"MCGEE\",\n      \"FARMER\",\n      \"DELGADO\",\n      \"AGUILAR\",\n      \"VEGA\",\n      \"GLOVER\",\n      \"MANNING\",\n      \"COHEN\",\n      \"HARMON\",\n      \"RODGERS\",\n      \"ROBBINS\",\n      \"NEWTON\",\n      \"TODD\",\n      \"BLAIR\",\n      \"HIGGINS\",\n      \"INGRAM\",\n      \"REESE\",\n      \"CANNON\",\n      \"STRICKLAND\",\n      \"TOWNSEND\",\n      \"POTTER\",\n      \"GOODWIN\",\n      \"WALTON\",\n      \"ROWE\",\n      \"HAMPTON\",\n      \"ORTEGA\",\n      \"PATTON\",\n      \"SWANSON\",\n      \"JOSEPH\",\n      \"FRANCIS\",\n      \"GOODMAN\",\n      \"MALDONADO\",\n      \"YATES\",\n      \"BECKER\",\n      \"ERICKSON\",\n      \"HODGES\",\n      \"RIOS\",\n      \"CONNER\",\n      \"ADKINS\",\n      \"WEBSTER\",\n      \"NORMAN\",\n      \"MALONE\",\n      \"HAMMOND\",\n      \"FLOWERS\",\n      \"COBB\",\n      \"MOODY\",\n      \"QUINN\",\n      \"BLAKE\",\n      \"MAXWELL\",\n      \"POPE\",\n      \"FLOYD\",\n      \"OSBORNE\",\n      \"PAUL\",\n      \"MCCARTHY\",\n      \"GUERRERO\",\n      \"LINDSEY\",\n      \"ESTRADA\",\n      \"SANDOVAL\",\n      \"GIBBS\",\n      \"TYLER\",\n      \"GROSS\",\n      \"FITZGERALD\",\n      \"STOKES\",\n      \"DOYLE\",\n      \"SHERMAN\",\n      \"SAUNDERS\",\n      \"WISE\",\n      \"COLON\",\n      \"GILL\",\n      \"ALVARADO\",\n      \"GREER\",\n      \"PADILLA\",\n      \"SIMON\",\n      \"WATERS\",\n      \"NUNEZ\",\n      \"BALLARD\",\n      \"SCHWARTZ\",\n      \"MCBRIDE\",\n      \"HOUSTON\",\n      \"CHRISTENSEN\",\n      \"KLEIN\",\n      \"PRATT\",\n      \"BRIGGS\",\n      \"PARSONS\",\n      \"MCLAUGHLIN\",\n      \"ZIMMERMAN\",\n      \"FRENCH\",\n      \"BUCHANAN\",\n      \"MORAN\",\n      \"COPELAND\",\n      \"ROY\",\n      \"PITTMAN\",\n      \"BRADY\",\n      \"MCCORMICK\",\n      \"HOLLOWAY\",\n      \"BROCK\",\n      \"POOLE\",\n      \"FRANK\",\n      \"LOGAN\",\n      \"OWEN\",\n      \"BASS\",\n      \"MARSH\",\n      \"DRAKE\",\n      \"WONG\",\n      \"JEFFERSON\",\n      \"PARK\",\n      \"MORTON\",\n      \"ABBOTT\",\n      \"SPARKS\",\n      \"PATRICK\",\n      \"NORTON\",\n      \"HUFF\",\n      \"CLAYTON\",\n      \"MASSEY\",\n      \"LLOYD\",\n      \"FIGUEROA\",\n      \"CARSON\",\n      \"BOWERS\",\n      \"ROBERSON\",\n      \"BARTON\",\n      \"TRAN\",\n      \"LAMB\",\n      \"HARRINGTON\",\n      \"CASEY\",\n      \"BOONE\",\n      \"CORTEZ\",\n      \"CLARKE\",\n      \"MATHIS\",\n      \"SINGLETON\",\n      \"WILKINS\",\n      \"CAIN\",\n      \"BRYAN\",\n      \"UNDERWOOD\",\n      \"HOGAN\",\n      \"MCKENZIE\",\n      \"COLLIER\",\n      \"LUNA\",\n      \"PHELPS\",\n      \"MCGUIRE\",\n      \"ALLISON\",\n      \"BRIDGES\",\n      \"WILKERSON\",\n      \"NASH\",\n      \"SUMMERS\",\n      \"ATKINS\",\n      \"WILCOX\",\n      \"PITTS\",\n      \"CONLEY\",\n      \"MARQUEZ\",\n      \"BURNETT\",\n      \"RICHARD\",\n      \"COCHRAN\",\n      \"CHASE\",\n      \"DAVENPORT\",\n      \"HOOD\",\n      \"GATES\",\n      \"CLAY\",\n      \"AYALA\",\n      \"SAWYER\",\n      \"ROMAN\",\n      \"VAZQUEZ\",\n      \"DICKERSON\",\n      \"HODGE\",\n      \"ACOSTA\",\n      \"FLYNN\",\n      \"ESPINOZA\",\n      \"NICHOLSON\",\n      \"MONROE\",\n      \"WOLF\",\n      \"MORROW\",\n      \"KIRK\",\n      \"RANDALL\",\n      \"ANTHONY\",\n      \"WHITAKER\",\n      \"OCONNOR\",\n      \"SKINNER\",\n      \"WARE\",\n      \"MOLINA\",\n      \"KIRBY\",\n      \"HUFFMAN\",\n      \"BRADFORD\",\n      \"CHARLES\",\n      \"GILMORE\",\n      \"DOMINGUEZ\",\n      \"ONEAL\",\n      \"BRUCE\",\n      \"LANG\",\n      \"COMBS\",\n      \"KRAMER\",\n      \"HEATH\",\n      \"HANCOCK\",\n      \"GALLAGHER\",\n      \"GAINES\",\n      \"SHAFFER\",\n      \"SHORT\",\n      \"WIGGINS\",\n      \"MATHEWS\",\n      \"MCCLAIN\",\n      \"FISCHER\",\n      \"WALL\",\n      \"SMALL\",\n      \"MELTON\",\n      \"HENSLEY\",\n      \"BOND\",\n      \"DYER\",\n      \"CAMERON\",\n      \"GRIMES\",\n      \"CONTRERAS\",\n      \"CHRISTIAN\",\n      \"WYATT\",\n      \"BAXTER\",\n      \"SNOW\",\n      \"MOSLEY\",\n      \"SHEPHERD\",\n      \"LARSEN\",\n      \"HOOVER\",\n      \"BEASLEY\",\n      \"GLENN\",\n      \"PETERSEN\",\n      \"WHITEHEAD\",\n      \"MEYERS\",\n      \"KEITH\",\n      \"GARRISON\",\n      \"VINCENT\",\n      \"SHIELDS\",\n      \"HORN\",\n      \"SAVAGE\",\n      \"OLSEN\",\n      \"SCHROEDER\",\n      \"HARTMAN\",\n      \"WOODARD\",\n      \"MUELLER\",\n      \"KEMP\",\n      \"DELEON\",\n      \"BOOTH\",\n      \"PATEL\",\n      \"CALHOUN\",\n      \"WILEY\",\n      \"EATON\",\n      \"CLINE\",\n      \"NAVARRO\",\n      \"HARRELL\",\n      \"LESTER\",\n      \"HUMPHREY\",\n      \"PARRISH\",\n      \"DURAN\",\n      \"HUTCHINSON\",\n      \"HESS\",\n      \"DORSEY\",\n      \"BULLOCK\",\n      \"ROBLES\",\n      \"BEARD\",\n      \"DALTON\",\n      \"AVILA\",\n      \"VANCE\",\n      \"RICH\",\n      \"BLACKWELL\",\n      \"YORK\",\n      \"JOHNS\",\n      \"BLANKENSHIP\",\n      \"TREVINO\",\n      \"SALINAS\",\n      \"CAMPOS\",\n      \"PRUITT\",\n      \"MOSES\",\n      \"CALLAHAN\",\n      \"GOLDEN\",\n      \"MONTOYA\",\n      \"HARDIN\",\n      \"GUERRA\",\n      \"MCDOWELL\",\n      \"CAREY\",\n      \"STAFFORD\",\n      \"GALLEGOS\",\n      \"HENSON\",\n      \"WILKINSON\",\n      \"BOOKER\",\n      \"MERRITT\",\n      \"MIRANDA\",\n      \"ATKINSON\",\n      \"ORR\",\n      \"DECKER\",\n      \"HOBBS\",\n      \"PRESTON\",\n      \"TANNER\",\n      \"KNOX\",\n      \"PACHECO\",\n      \"STEPHENSON\",\n      \"GLASS\",\n      \"ROJAS\",\n      \"SERRANO\",\n      \"MARKS\",\n      \"HICKMAN\",\n      \"ENGLISH\",\n      \"SWEENEY\",\n      \"STRONG\",\n      \"PRINCE\",\n      \"MCCLURE\",\n      \"CONWAY\",\n      \"WALTER\",\n      \"ROTH\",\n      \"MAYNARD\",\n      \"FARRELL\",\n      \"LOWERY\",\n      \"HURST\",\n      \"NIXON\",\n      \"WEISS\",\n      \"TRUJILLO\",\n      \"ELLISON\",\n      \"SLOAN\",\n      \"JUAREZ\",\n      \"WINTERS\",\n      \"MCLEAN\",\n      \"RANDOLPH\",\n      \"LEON\",\n      \"BOYER\",\n      \"VILLARREAL\",\n      \"MCCALL\",\n      \"GENTRY\",\n      \"CARRILLO\",\n      \"KENT\",\n      \"AYERS\",\n      \"LARA\",\n      \"SHANNON\",\n      \"SEXTON\",\n      \"PACE\",\n      \"HULL\",\n      \"LEBLANC\",\n      \"BROWNING\",\n      \"VELASQUEZ\",\n      \"LEACH\",\n      \"CHANG\",\n      \"HOUSE\",\n      \"SELLERS\",\n      \"HERRING\",\n      \"NOBLE\",\n      \"FOLEY\",\n      \"BARTLETT\",\n      \"MERCADO\",\n      \"LANDRY\",\n      \"DURHAM\",\n      \"WALLS\",\n      \"BARR\",\n      \"MCKEE\",\n      \"BAUER\",\n      \"RIVERS\",\n      \"EVERETT\",\n      \"BRADSHAW\",\n      \"PUGH\",\n      \"VELEZ\",\n      \"RUSH\",\n      \"ESTES\",\n      \"DODSON\",\n      \"MORSE\",\n      \"SHEPPARD\",\n      \"WEEKS\",\n      \"CAMACHO\",\n      \"BEAN\",\n      \"BARRON\",\n      \"LIVINGSTON\",\n      \"MIDDLETON\",\n      \"SPEARS\",\n      \"BRANCH\",\n      \"BLEVINS\",\n      \"CHEN\",\n      \"KERR\",\n      \"MCCONNELL\",\n      \"HATFIELD\",\n      \"HARDING\",\n      \"ASHLEY\",\n      \"SOLIS\",\n      \"HERMAN\",\n      \"FROST\",\n      \"GILES\",\n      \"BLACKBURN\",\n      \"WILLIAM\",\n      \"PENNINGTON\",\n      \"WOODWARD\",\n      \"FINLEY\",\n      \"MCINTOSH\",\n      \"KOCH\",\n      \"BEST\",\n      \"SOLOMON\",\n      \"MCCULLOUGH\",\n      \"DUDLEY\",\n      \"NOLAN\",\n      \"BLANCHARD\",\n      \"RIVAS\",\n      \"BRENNAN\",\n      \"MEJIA\",\n      \"KANE\",\n      \"BENTON\",\n      \"JOYCE\",\n      \"BUCKLEY\",\n      \"HALEY\",\n      \"VALENTINE\",\n      \"MADDOX\",\n      \"RUSSO\",\n      \"MCKNIGHT\",\n      \"BUCK\",\n      \"MOON\",\n      \"MCMILLAN\",\n      \"CROSBY\",\n      \"BERG\",\n      \"DOTSON\",\n      \"MAYS\",\n      \"ROACH\",\n      \"CHURCH\",\n      \"CHAN\",\n      \"RICHMOND\",\n      \"MEADOWS\",\n      \"FAULKNER\",\n      \"ONEILL\",\n      \"KNAPP\",\n      \"KLINE\",\n      \"BARRY\",\n      \"OCHOA\",\n      \"JACOBSON\",\n      \"GAY\",\n      \"AVERY\",\n      \"HENDRICKS\",\n      \"HORNE\",\n      \"SHEPARD\",\n      \"HEBERT\",\n      \"CHERRY\",\n      \"CARDENAS\",\n      \"MCINTYRE\",\n      \"WHITNEY\",\n      \"WALLER\",\n      \"HOLMAN\",\n      \"DONALDSON\",\n      \"CANTU\",\n      \"TERRELL\",\n      \"MORIN\",\n      \"GILLESPIE\",\n      \"FUENTES\",\n      \"TILLMAN\",\n      \"SANFORD\",\n      \"BENTLEY\",\n      \"PECK\",\n      \"KEY\",\n      \"SALAS\",\n      \"ROLLINS\",\n      \"GAMBLE\",\n      \"DICKSON\",\n      \"BATTLE\",\n      \"SANTANA\",\n      \"CABRERA\",\n      \"CERVANTES\",\n      \"HOWE\",\n      \"HINTON\",\n      \"HURLEY\",\n      \"SPENCE\",\n      \"ZAMORA\",\n      \"YANG\",\n      \"MCNEIL\",\n      \"SUAREZ\",\n      \"CASE\",\n      \"PETTY\",\n      \"GOULD\",\n      \"MCFARLAND\",\n      \"SAMPSON\",\n      \"CARVER\",\n      \"BRAY\",\n      \"ROSARIO\",\n      \"MACDONALD\",\n      \"STOUT\",\n      \"HESTER\",\n      \"MELENDEZ\",\n      \"DILLON\",\n      \"FARLEY\",\n      \"HOPPER\",\n      \"GALLOWAY\",\n      \"POTTS\",\n      \"BERNARD\",\n      \"JOYNER\",\n      \"STEIN\",\n      \"AGUIRRE\",\n      \"OSBORN\",\n      \"MERCER\",\n      \"BENDER\",\n      \"FRANCO\",\n      \"ROWLAND\",\n      \"SYKES\",\n      \"BENJAMIN\",\n      \"TRAVIS\",\n      \"PICKETT\",\n      \"CRANE\",\n      \"SEARS\",\n      \"MAYO\",\n      \"DUNLAP\",\n      \"HAYDEN\",\n      \"WILDER\",\n      \"MCKAY\",\n      \"COFFEY\",\n      \"MCCARTY\",\n      \"EWING\",\n      \"COOLEY\",\n      \"VAUGHAN\",\n      \"BONNER\",\n      \"COTTON\",\n      \"HOLDER\",\n      \"STARK\",\n      \"FERRELL\",\n      \"CANTRELL\",\n      \"FULTON\",\n      \"LYNN\",\n      \"LOTT\",\n      \"CALDERON\",\n      \"ROSA\",\n      \"POLLARD\",\n      \"HOOPER\",\n      \"BURCH\",\n      \"MULLEN\",\n      \"FRY\",\n      \"RIDDLE\",\n      \"LEVY\",\n      \"DAVID\",\n      \"DUKE\",\n      \"ODONNELL\",\n      \"GUY\",\n      \"MICHAEL\",\n      \"BRITT\",\n      \"FREDERICK\",\n      \"DAUGHERTY\",\n      \"BERGER\",\n      \"DILLARD\",\n      \"ALSTON\",\n      \"JARVIS\",\n      \"FRYE\",\n      \"RIGGS\",\n      \"CHANEY\",\n      \"ODOM\",\n      \"DUFFY\",\n      \"FITZPATRICK\",\n      \"VALENZUELA\",\n      \"MERRILL\",\n      \"MAYER\",\n      \"ALFORD\",\n      \"MCPHERSON\",\n      \"ACEVEDO\",\n      \"DONOVAN\",\n      \"BARRERA\",\n      \"ALBERT\",\n      \"COTE\",\n      \"REILLY\",\n      \"COMPTON\",\n      \"RAYMOND\",\n      \"MOONEY\",\n      \"MCGOWAN\",\n      \"CRAFT\",\n      \"CLEVELAND\",\n      \"CLEMONS\",\n      \"WYNN\",\n      \"NIELSEN\",\n      \"BAIRD\",\n      \"STANTON\",\n      \"SNIDER\",\n      \"ROSALES\",\n      \"BRIGHT\",\n      \"WITT\",\n      \"STUART\",\n      \"HAYS\",\n      \"HOLDEN\",\n      \"RUTLEDGE\",\n      \"KINNEY\",\n      \"CLEMENTS\",\n      \"CASTANEDA\",\n      \"SLATER\",\n      \"HAHN\",\n      \"EMERSON\",\n      \"CONRAD\",\n      \"BURKS\",\n      \"DELANEY\",\n      \"PATE\",\n      \"LANCASTER\",\n      \"SWEET\",\n      \"JUSTICE\",\n      \"TYSON\",\n      \"SHARPE\",\n      \"WHITFIELD\",\n      \"TALLEY\",\n      \"MACIAS\",\n      \"IRWIN\",\n      \"BURRIS\",\n      \"RATLIFF\",\n      \"MCCRAY\",\n      \"MADDEN\",\n      \"KAUFMAN\",\n      \"BEACH\",\n      \"GOFF\",\n      \"CASH\",\n      \"BOLTON\",\n      \"MCFADDEN\",\n      \"LEVINE\",\n      \"GOOD\",\n      \"BYERS\",\n      \"KIRKLAND\",\n      \"KIDD\",\n      \"WORKMAN\",\n      \"CARNEY\",\n      \"DALE\",\n      \"MCLEOD\",\n      \"HOLCOMB\",\n      \"ENGLAND\",\n      \"FINCH\",\n      \"HEAD\",\n      \"BURT\",\n      \"HENDRIX\",\n      \"SOSA\",\n      \"HANEY\",\n      \"FRANKS\",\n      \"SARGENT\",\n      \"NIEVES\",\n      \"DOWNS\",\n      \"RASMUSSEN\",\n      \"BIRD\",\n      \"HEWITT\",\n      \"LINDSAY\",\n      \"LE\",\n      \"FOREMAN\",\n      \"VALENCIA\",\n      \"ONEIL\",\n      \"DELACRUZ\",\n      \"VINSON\",\n      \"DEJESUS\",\n      \"HYDE\",\n      \"FORBES\",\n      \"GILLIAM\",\n      \"GUTHRIE\",\n      \"WOOTEN\",\n      \"HUBER\",\n      \"BARLOW\",\n      \"BOYLE\",\n      \"MCMAHON\",\n      \"BUCKNER\",\n      \"ROCHA\",\n      \"PUCKETT\",\n      \"LANGLEY\",\n      \"KNOWLES\",\n      \"COOKE\",\n      \"VELAZQUEZ\",\n      \"WHITLEY\",\n      \"NOEL\",\n      \"VANG\",\n    ];\n    this.streets = [\n      \"JACKSON STREET\",\n      \"ROUTE 41\",\n      \"HILLCREST AVENUE\",\n      \"5TH STREET\",\n      \"RIDGE AVENUE\",\n      \"CREEKSIDE DRIVE\",\n      \"ORCHARD LANE\",\n      \"MECHANIC STREET\",\n      \"3RD STREET NORTH\",\n      \"CANTERBURY COURT\",\n      \"ASHLEY COURT\",\n      \"CYPRESS COURT\",\n      \"SCHOOL STREET\",\n      \"FRANKLIN STREET\",\n      \"RIVER STREET\",\n      \"COBBLESTONE COURT\",\n      \"DELAWARE AVENUE\",\n      \"5TH STREET WEST\",\n      \"4TH STREET NORTH\",\n      \"WILLOW LANE\",\n      \"MYRTLE STREET\",\n      \"CHESTNUT STREET\",\n      \"COURT STREET\",\n      \"FAIRVIEW ROAD\",\n      \"WINDING WAY\",\n      \"IVY LANE\",\n      \"8TH STREET\",\n      \"HARRISON AVENUE\",\n      \"AMHERST STREET\",\n      \"HUDSON STREET\",\n      \"FRONT STREET SOUTH\",\n      \"RAILROAD STREET\",\n      \"HAWTHORNE AVENUE\",\n      \"GRANT STREET\",\n      \"TANGLEWOOD DRIVE\",\n      \"DOGWOOD DRIVE\",\n      \"EDGEWOOD DRIVE\",\n      \"FAWN COURT\",\n      \"2ND STREET EAST\",\n      \"SUMMIT STREET\",\n      \"LAUREL DRIVE\",\n      \"ANN STREET\",\n      \"ELMWOOD AVENUE\",\n      \"CROSS STREET\",\n      \"WINDSOR COURT\",\n      \"RIVER ROAD\",\n      \"VIRGINIA AVENUE\",\n      \"FOREST AVENUE\",\n      \"HEATHER LANE\",\n      \"1ST STREET\",\n      \"2ND STREET NORTH\",\n      \"MYRTLE AVENUE\",\n      \"WOODLAND ROAD\",\n      \"8TH AVENUE\",\n      \"BROOKSIDE DRIVE\",\n      \"SMITH STREET\",\n      \"MAPLE LANE\",\n      \"STATE STREET\",\n      \"HAWTHORNE LANE\",\n      \"QUEEN STREET\",\n      \"OVERLOOK CIRCLE\",\n      \"4TH AVENUE\",\n      \"JEFFERSON STREET\",\n      \"HILLTOP ROAD\",\n      \"INVERNESS DRIVE\",\n      \"MAGNOLIA COURT\",\n      \"DOGWOOD LANE\",\n      \"HENRY STREET\",\n      \"SPRING STREET\",\n      \"FRANKLIN COURT\",\n      \"LOCUST STREET\",\n      \"YORK STREET\",\n      \"RIVERSIDE DRIVE\",\n      \"CEMETERY ROAD\",\n      \"MAIN STREET\",\n      \"HIGHLAND DRIVE\",\n      \"PINE STREET\",\n      \"LOIS LANE\",\n      \"CANTERBURY DRIVE\",\n      \"MAIN STREET EAST\",\n      \"HARRISON STREET\",\n      \"CLINTON STREET\",\n      \"MADISON AVENUE\",\n      \"2ND STREET WEST\",\n      \"SUMMIT AVENUE\",\n      \"WOODLAND AVENUE\",\n      \"CAMBRIDGE COURT\",\n      \"SHADY LANE\",\n      \"GEORGE STREET\",\n      \"LAUREL STREET\",\n      \"BRIARWOOD COURT\",\n      \"IVY COURT\",\n      \"LAFAYETTE AVENUE\",\n      \"YORK ROAD\",\n      \"VALLEY VIEW ROAD\",\n      \"CREEK ROAD\",\n      \"SYCAMORE LANE\",\n      \"PEARL STREET\",\n      \"11TH STREET\",\n      \"ROUTE 1\",\n      \"HAUPTSTRASSE\",\n    ];\n    this.cities = [\n      \"MADRID\",\n      \"BENGALURU\",\n      \"AHMEDABAD\",\n      \"LOS ANGELES\",\n      \"BAKU\",\n      \"ALGIERS\",\n      \"SHIRAZ\",\n      \"DONGGUAN\",\n      \"QUITO\",\n      \"TORONTO\",\n      \"WUHAN\",\n      \"HONG KONG\",\n      \"MELBOURNE\",\n      \"MAPUTO\",\n      \"XI'AN\",\n      \"RECIFE\",\n      \"SANTA CRUZ DE LA SIERRA\",\n      \"SHANGHAI\",\n      \"MONTERREY\",\n      \"HAVANA\",\n      \"TAIPEI\",\n      \"ABIDJAN\",\n      \"KARACHI\",\n      \"TASHKENT\",\n      \"MUMBAI\",\n      \"SHIJIAZHUANG\",\n      \"JAKARTA\",\n      \"NANJING\",\n      \"HYDERABAD\",\n      \"XIAMEN\",\n      \"FAISALABAD\",\n      \"QUANZHOU\",\n      \"BOGOTA\",\n      \"KUALA LUMPUR\",\n      \"FOSHAN\",\n      \"BAGHDAD\",\n      \"ROSTOV-ON-DON\",\n      \"KAOHSIUNG\",\n      \"PHOENIX\",\n      \"SYDNEY\",\n      \"PESHAWAR\",\n      \"ADDIS ABABA\",\n      \"RIO DE JANEIRO\",\n      \"BARCELONA\",\n      \"SAPPORO\",\n      \"MONTEVIDEO\",\n      \"ASTANA\",\n      \"AHVAZ\",\n      \"TEHRAN\",\n      \"HEFEI\",\n    ];\n    this.countries = [\n      \"TOGO\",\n      \"UKRAINE\",\n      \"DJIBOUTI\",\n      \"COLOMBIA\",\n      \"ALGERIA\",\n      \"ERITREA\",\n      \"BELIZE\",\n      \"UNITED STATES OF AMERICA\",\n      \"POLAND\",\n      \"TOKELAU\",\n      \"JORDAN\",\n      \"RUSSIAN FEDERATION\",\n      \"GERMANY\",\n      \"BRITISH INDIAN OCEAN TERRITORY\",\n      \"SURINAME\",\n      \"NORTHERN MARIANA ISLANDS\",\n      \"FRENCH SOUTHERN TERRITORIES\",\n      \"MYANMAR\",\n      \"SWEDEN\",\n      \"JERSEY\",\n      \"ANGUILLA\",\n      \"UZBEKISTAN\",\n      \"CHINA\",\n      \"ISRAEL\",\n      \"MALI\",\n      \"SAINT VINCENT AND THE GRENADINES\",\n      \"ISLE OF MAN\",\n      \"SYRIAN ARAB REPUBLIC\",\n      \"IRAQ\",\n      \"SOMALIA\",\n      \"ESTONIA\",\n      \"KIRIBATI\",\n      \"NORFOLK ISLAND\",\n      \"COSTA RICA\",\n      \"KYRGYZSTAN\",\n      \"LAO PEOPLE'S DEMOCRATIC REPUBLIC\",\n      \"ISLE OF MAN\",\n      \"BOTSWANA\",\n      \"CANADA\",\n      \"FALKLAND ISLANDS (MALVINAS)\",\n      \"WALLIS AND FUTUNA\",\n      \"AFGHANISTAN\",\n      \"CHAD\",\n      \"SRI LANKA\",\n      \"LATVIA\",\n      \"ITALY\",\n      \"YEMEN\",\n      \"BRAZIL\",\n      \"INDIA\",\n      \"JAPAN\",\n      \"FRANCE\",\n      \"UNITED KINGDOM\",\n      \"SOUTH AFRICA\",\n      \"MEXICO\",\n      \"ARGENTINA\",\n      \"EGYPT\",\n      \"TURKEY\",\n      \"THAILAND\",\n      \"SPAIN\",\n      \"AUSTRALIA\",\n      \"NETHERLANDS\",\n      \"SWITZERLAND\",\n      \"NORWAY\",\n      \"DENMARK\",\n      \"FINLAND\",\n      \"GREECE\",\n      \"PORTUGAL\",\n      \"AUSTRIA\",\n      \"NEW ZEALAND\",\n      \"SINGAPORE\",\n      \"IRELAND\",\n      \"BELGIUM\",\n      \"CZECH REPUBLIC\",\n      \"PHILIPPINES\",\n      \"VIETNAM\",\n      \"INDONESIA\",\n      \"MALAYSIA\",\n      \"SAUDI ARABIA\",\n    ];\n  }\n}\n","import { data, dataSet } from \"dcmjs\";\nimport { lists } from \"./lists\";\nimport Randomizer from \"./randomizer\";\n\nclass AddressAnonymizer {\n  private randomizer: Randomizer;\n  private lists: lists;\n\n  addressTag: string = data.DicomMetaDictionary.nameMap[\"PatientAddress\"].tag;\n  regionTag: string = data.DicomMetaDictionary.nameMap[\"RegionOfResidence\"].tag;\n  countryTag: string = data.DicomMetaDictionary.nameMap[\"CountryOfResidence\"].tag;\n  valueFactories; //: { [key: string]: (originalValue: string) => Promise<string> } | undefined;\n\n  constructor(Randomizer: Randomizer) {\n    this.randomizer = Randomizer;\n    this.lists = new lists();\n\n    this.addressTag = data.DicomMetaDictionary.unpunctuateTag(this.addressTag);\n    this.regionTag = data.DicomMetaDictionary.unpunctuateTag(this.regionTag);\n    this.countryTag = data.DicomMetaDictionary.unpunctuateTag(this.countryTag);\n    // this._setupValueFactories();\n    this.valueFactories = {\n      [this.addressTag]: this.getLegalAddress,\n      [this.regionTag]: this.getRegion,\n      [this.countryTag]: this.getCountry,\n    };\n  }\n\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\n    const valueFactory = await this.valueFactories[dataTag];\n\n    if (valueFactory == undefined) {\n      return false;\n    }\n\n    if (dataset[dataTag].Value.length > 1) {\n      dataset[dataTag].Value = await Promise.all(\n        dataset[dataTag].Value.map((value: string) => valueFactory(value))\n      );\n      return true;\n    } else {\n      const originalValue = dataset[dataTag].Value[0] || \"\";\n      dataset[dataTag].Value = [await valueFactory(originalValue)];\n      return true;\n    }\n  };\n\n  getLegalAddress = async (originalValue: string): Promise<string> => {\n    const street: string = await this.getStreetAddress(originalValue);\n    const streetNumber: string = await this.getStreetNumber(originalValue);\n    const city: string = await this.getRegion(originalValue);\n\n    return `${streetNumber} ${street}, ${city}`;\n  };\n\n  getStreetNumber = async (originalValue: string): Promise<string> => {\n    const [streetNumberIndex]: number[] = await this.randomizer.getIntsFromRanges(\n      originalValue,\n      1000\n    );\n    const streetNumber: number = streetNumberIndex + 1;\n\n    return `${streetNumber}`;\n  };\n\n  getStreetAddress = async (originalValue: string): Promise<string> => {\n    const [streetIndex]: number[] = await this.randomizer.getIntsFromRanges(\n      originalValue,\n      this.lists.streets.length\n    );\n\n    return `${this.lists.streets[streetIndex]}`;\n  };\n\n  getRegion = async (originalValue: string): Promise<string> => {\n    const [cityIndex]: number[] = await this.randomizer.getIntsFromRanges(\n      originalValue,\n      this.lists.cities.length\n    );\n\n    return `${this.lists.cities[cityIndex]}`;\n  };\n\n  getCountry = async (originalValue: string): Promise<string> => {\n    const [countryIndex]: number[] = await this.randomizer.getIntsFromRanges(\n      originalValue,\n      this.lists.countries.length\n    );\n\n    return `${this.lists.countries[countryIndex]}`;\n  };\n}\n\nexport default AddressAnonymizer;\n","import { data, dataSet } from \"dcmjs\";\r\n\r\ntype returnarg = {\r\n  value: string;\r\n  tag: string;\r\n};\r\n\r\nclass DateTimeAnonymizer {\r\n  private offset: number;\r\n\r\n  constructor(dateOffsetHours: number) {\r\n    // if we keep 60 * 60 * 1000 here, we get a problem where Datetimes are created.\r\n    // This way Datetimes dont get shifted by only full days\r\n    this.offset = dateOffsetHours * 60 * 59 * 1000;\r\n  }\r\n\r\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\r\n    if (dataset[dataTag].vr != \"DA\" && dataset[dataTag].vr != \"DT\") {\r\n      return false;\r\n    }\r\n    if (dataset[dataTag].Value[0] == undefined) {\r\n      return true;\r\n    }\r\n\r\n    if (dataset[dataTag].vr == \"DA\") {\r\n      await this.anonymizeDateAndTime(dataset, dataTag);\r\n    } else {\r\n      await this.anonymizeDatetime(dataset, dataTag);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  async anonymizeDateAndTime(dataset: dataSet, dataTag: string) {\r\n    const dates = dataset[dataTag].Value;\r\n    const result: returnarg = this.checkTag(dataset, dataTag);\r\n\r\n    const times: string = result.value;\r\n\r\n    const newDates: string[] = [];\r\n    const newTimes: string[] = [];\r\n\r\n    for (const [date, time] of this.zipLongest(\"\", dates, times)) {\r\n      const newDateTime = this.shiftDateTime(date + time);\r\n\r\n      newDates.push(newDateTime.slice(0, 8));\r\n      newTimes.push(newDateTime.slice(8));\r\n    }\r\n\r\n    dataset[dataTag].Value = newDates;\r\n    if (result.tag != \"\") {\r\n      try {\r\n        dataset[result.tag].Value = newTimes;\r\n      } catch {\r\n        console.log(\"Time tag does not exist: \" + result.tag);\r\n      }\r\n    }\r\n  }\r\n\r\n  async anonymizeDatetime(dataset: dataSet, dataTag: string) {\r\n    const dateTimes = dataset[dataTag].Value;\r\n    const newDateTimes: string[] = [];\r\n\r\n    for (const dateTimeValue of dateTimes) {\r\n      const newDateTimeString = this.shiftDateTime(dateTimeValue);\r\n      newDateTimes.push(newDateTimeString);\r\n    }\r\n    dataset[dataTag].Value = newDateTimes;\r\n  }\r\n\r\n  shiftDateTime = (dateTimeValue: string): string => {\r\n    const dateTimeFormat = \"%Y%m%d%H\".slice(0, dateTimeValue.length - 2);\r\n    const oldDateTime = this.parseDateTime(dateTimeValue);\r\n    const newDateTime = new Date(oldDateTime.getTime() + this.offset);\r\n    let newDateTimeString = this.formatDate(newDateTime, dateTimeFormat);\r\n    newDateTimeString += dateTimeValue.slice(newDateTimeString.length);\r\n\r\n    return newDateTimeString;\r\n  };\r\n\r\n  parseDateTime = (dateTimeValue: string): Date => {\r\n    // similar to pythons strptime() method\r\n    const dateString = dateTimeValue;\r\n    const year = Number(dateString.slice(0, 4));\r\n    const month = Number(dateString.slice(4, 6)) - 1; // JavaScript months are zero-indexed (0 to 11)\r\n    const day = Number(dateString.slice(6, 8));\r\n    const hour = Number(dateString.slice(8, 10));\r\n    const minute = Number(dateString.slice(10, 12));\r\n    const second = Number(dateString.slice(12, 14));\r\n    const milliseconds = Number(dateString.slice(15, dateString.length));\r\n\r\n    return new Date(year, month, day, hour, minute, second, milliseconds);\r\n  };\r\n\r\n  formatDate = (date: Date, format: string): string => {\r\n    const padZero = (value: number, length: number) => String(value).padStart(length, \"0\");\r\n\r\n    const year = padZero(date.getFullYear(), 4);\r\n    const month = padZero(date.getMonth() + 1, 2); // Months are zero-indexed, so add 1\r\n    const day = padZero(date.getDate(), 2);\r\n    const hours = padZero(date.getHours(), 2);\r\n    const minutes = padZero(date.getMinutes(), 2);\r\n    const seconds = padZero(date.getSeconds(), 2);\r\n    const milliseconds = padZero(date.getMilliseconds(), 6);\r\n\r\n    return format\r\n      .replace(\"%Y\", year)\r\n      .replace(\"%m\", month)\r\n      .replace(\"%d\", day)\r\n      .replace(\"%H\", hours)\r\n      .replace(\"%M\", minutes)\r\n      .replace(\"%S\", seconds)\r\n      .replace(\"%s\", milliseconds);\r\n  };\r\n\r\n  zipLongest = (fillValue = \"\", ...arr: string[]): string[][] => {\r\n    const maxLength = Math.max(...arr.map((arr: string) => arr.length));\r\n\r\n    return Array.from({ length: maxLength }, (_, index) => {\r\n      return arr.map((arr: string[number]) => (arr[index] !== undefined ? arr[index] : fillValue));\r\n    });\r\n  };\r\n\r\n  checkTag = (dataset: dataSet, dataTag: string): returnarg => {\r\n    const tagName =\r\n      data.DicomMetaDictionary.dictionary[data.DicomMetaDictionary.punctuateTag(dataTag)].name;\r\n    const timeName = tagName.replace(\"Date\", \"Time\");\r\n\r\n    if (typeof data.DicomMetaDictionary.nameMap[timeName] !== \"undefined\") {\r\n      let timeNameTag = data.DicomMetaDictionary.nameMap[timeName].tag;\r\n      timeNameTag = data.DicomMetaDictionary.unpunctuateTag(timeNameTag);\r\n\r\n      if (timeNameTag in dataset) {\r\n        const timeElement = dataset[timeNameTag];\r\n        const returnArg: returnarg = {\r\n          value: timeElement.Value,\r\n          tag: timeNameTag,\r\n        };\r\n\r\n        return returnArg;\r\n      } else {\r\n        const returnArg: returnarg = {\r\n          value: \"\",\r\n          tag: \"\",\r\n        };\r\n        return returnArg;\r\n      }\r\n    } else {\r\n      const returnArg: returnarg = {\r\n        value: \"\",\r\n        tag: \"\",\r\n      };\r\n      return returnArg;\r\n    }\r\n  };\r\n}\r\n\r\nexport default DateTimeAnonymizer;\r\n","import { dataSet } from \"dcmjs\";\n\nclass FixedValueAnonymizer {\n  private tag: string;\n  private value: string;\n\n  constructor(tag: string, value: string) {\n    this.tag = tag;\n    this.value = value;\n  }\n\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\n    if (dataTag == this.tag) {\n      dataset[dataTag].Value[0] = this.value;\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nexport default FixedValueAnonymizer;\n","import { data, dataSet } from \"dcmjs\";\nimport Randomizer from \"./randomizer\";\n\nclass IDAnonymizer {\n  private keywords: string[];\n  private randomizer: Randomizer;\n  private idSuffix: string;\n  private idPrefix: string;\n  private issuerTag: string;\n  private alphabet: string;\n  private totalAffixesLength: number;\n  private indicesForRandomizer: number[];\n\n  constructor(Randomizer: Randomizer, keywords: string[], idPrefix = \"\", idSuffix = \"\") {\n    this.keywords = keywords;\n    this.randomizer = Randomizer;\n    this.idPrefix = idPrefix;\n    this.idSuffix = idSuffix;\n    this.issuerTag = data.DicomMetaDictionary.nameMap[\"IssuerOfPatientID\"].tag;\n\n    this.alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    this.totalAffixesLength = this.idPrefix.length + this.idSuffix.length;\n    this.indicesForRandomizer = new Array<number>(12 - this.totalAffixesLength).fill(\n      this.alphabet.length\n    );\n  }\n\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\n    if (this.keywords.includes(dataTag)) {\n      await this.replaceID(dataset, dataTag);\n      return true;\n    } else if (dataTag == this.issuerTag && dataset[dataTag].Value[0] != \"\") {\n      dataset[dataTag].Value[0] = \"DICOM_ANONYMIZER\";\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  replaceID = async (dataset: dataSet, dataTag: string) => {\n    if (dataset[dataTag].Value.length > 1) {\n      for (let i = 0; i < dataset[dataTag].Value.length; i++) {\n        dataset[dataTag].Value[i] = await this.newID(dataset[dataTag].Value[i]);\n      }\n    } else if (dataset[dataTag].Value.length == 1) {\n      const originalValue = dataset[dataTag].Value[0];\n      dataset[dataTag].Value[0] = await this.newID(originalValue);\n    } else {\n      dataset[dataTag].Value = [await this.newID(\"\")];\n    }\n  };\n\n  newID = async (originalValue: string) => {\n    const indexes = await this.randomizer.getIntsFromRanges(\n      originalValue,\n      ...this.indicesForRandomizer\n    );\n    const idRoot: string = indexes.map((i) => this.alphabet[i]).join(\"\");\n\n    return this.idPrefix + idRoot + this.idSuffix;\n  };\n}\n\nexport default IDAnonymizer;\n","import { data, dataSet } from \"dcmjs\";\nimport AddressAnonymizer from \"./addressanonymizer\";\n\nclass InstitutionAnonymizer {\n  private addressAnonymizer: AddressAnonymizer;\n\n  institutionName: string = data.DicomMetaDictionary.nameMap[\"InstitutionName\"].tag; //0008,0080\n  institutionAddress: string = data.DicomMetaDictionary.nameMap[\"InstitutionAddress\"].tag; //0008,0081\n  institutionalDepartmentName: string =\n    data.DicomMetaDictionary.nameMap[\"InstitutionalDepartmentName\"].tag; //0008,1040\n  valueFactories; //: { [key: string]: (originalValue: string) => string };\n\n  constructor(AddressAnonymizer: AddressAnonymizer) {\n    this.addressAnonymizer = AddressAnonymizer;\n\n    this.institutionName = data.DicomMetaDictionary.unpunctuateTag(this.institutionName);\n    this.institutionAddress = data.DicomMetaDictionary.unpunctuateTag(this.institutionAddress);\n    this.institutionalDepartmentName = data.DicomMetaDictionary.unpunctuateTag(\n      this.institutionalDepartmentName\n    );\n\n    this.valueFactories = {\n      [this.institutionName]: this.anonymizeInstitutionName,\n      [this.institutionAddress]: this.anonymizeInstitutionAddress,\n      [this.institutionalDepartmentName]: this.anonymizeDepartmentName,\n    };\n  }\n\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\n    const valueFactory: (originalValue: string) => Promise<string> = await this.valueFactories[\n      dataTag\n    ];\n    if (valueFactory == undefined) {\n      return false;\n    }\n\n    if (dataset[dataTag].Value.length > 1) {\n      for (let i = 0; i < dataset[dataTag].Value.length; i++) {\n        dataset[dataTag].Value[i] = await valueFactory(dataset[dataTag].Value[i]);\n      }\n      return true;\n    } else if (dataset[dataTag].Value.length == 1) {\n      const originalValue: string = dataset[dataTag].Value[0];\n      dataset[dataTag].Value[0] = await valueFactory(originalValue);\n      return true;\n    } else {\n      dataset[dataTag].Value = [await valueFactory(\"\")];\n      return true;\n    }\n  };\n\n  anonymizeInstitutionName = async (originalValue: string): Promise<string> => {\n    const region = await this.addressAnonymizer.getRegion(originalValue);\n    const streetAddress = await this.addressAnonymizer.getStreetAddress(originalValue);\n\n    return `${region}'S ${streetAddress} CLINIC`;\n  };\n\n  anonymizeInstitutionAddress = async (originalValue: string): Promise<string> => {\n    const fullAddress = await this.addressAnonymizer.getLegalAddress(originalValue);\n    const country = await this.addressAnonymizer.getCountry(originalValue);\n\n    return `${fullAddress}, ${country}`;\n  };\n\n  anonymizeDepartmentName = (): Promise<string> => {\n    return Promise.resolve(\"RADIOLOGY\");\n  };\n}\n\nexport default InstitutionAnonymizer;\n","import { dataSet } from \"dcmjs\";\r\nimport { lists } from \"./lists\";\r\nimport Randomizer from \"./randomizer\";\r\n\r\nclass PNAnonymizer {\r\n  private randomizer: Randomizer;\r\n  lists: lists;\r\n\r\n  constructor(randomizer: Randomizer) {\r\n    this.randomizer = randomizer;\r\n    this.lists = new lists();\r\n  }\r\n\r\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\r\n    if (dataset[dataTag].vr != \"PN\") {\r\n      return false;\r\n    }\r\n\r\n    let patientSex = \"\";\r\n    if (\"00100040\" in dataset) {\r\n      patientSex = dataset[\"00100040\"].Value[0]; //PatientSex\r\n    }\r\n\r\n    if (dataset[dataTag].Value.length > 1) {\r\n      for (let i = 0; i < dataset[dataTag].Value.length; i++) {\r\n        dataset[dataTag].Value[i].Alphabetic = await this.newPN(\r\n          dataset[dataTag].Value[i].Alphabetic,\r\n          patientSex\r\n        );\r\n      }\r\n    } else if (dataset[dataTag].Value.length == 1) {\r\n      const originalName = dataset[dataTag].Value[0].Alphabetic;\r\n\r\n      dataset[dataTag].Value[0].Alphabetic = await this.newPN(originalName, patientSex);\r\n    } else {\r\n      dataset[dataTag].Value = [{ Alphabetic: await this.newPN(\"\", patientSex) }];\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  async newPN(originalValue: string, sex = \"\") {\r\n    let firstNames: string[];\r\n    if (sex == \"F\") {\r\n      firstNames = this.lists.femaleFirstNames;\r\n    } else if (sex == \"M\") {\r\n      firstNames = this.lists.maleFirstNames;\r\n    } else {\r\n      firstNames = this.lists.allFirstNames;\r\n    }\r\n    const lastNames = this.lists.lastNames;\r\n    if (originalValue != undefined) {\r\n      originalValue = originalValue.replaceAll(\"^\", \"\");\r\n    }\r\n\r\n    const indices = await this.randomizer.getIntsFromRanges(\r\n      originalValue,\r\n      this.lists.lastNames.length,\r\n      firstNames.length,\r\n      this.lists.allFirstNames.length\r\n    );\r\n\r\n    return `${lastNames[indices[0]]}^${firstNames[indices[1]]}^${\r\n      this.lists.allFirstNames[indices[2]]\r\n    }`;\r\n  }\r\n}\r\n\r\nexport default PNAnonymizer;\r\n","import { data, dataSet } from \"dcmjs\";\n\nclass PrivatTagAnonymizer {\n  anonymize = (dataset: dataSet, dataTag: string): boolean => {\n    const currTag = data.Tag.fromString(dataTag);\n    if (currTag.group() % 2 === 1) {\n      delete dataset[dataTag];\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nexport default PrivatTagAnonymizer;\n","class Randomizer {\n  private seed: string;\n\n  constructor(seed?: string) {\n    this.seed = seed || this.generateRandomSeed();\n  }\n\n  private async calculateSHADigestWeb(array: Uint8Array): Promise<Uint8Array> {\n    const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", array);\n    return new Promise((resolve) => {\n      resolve(new Uint8Array(hashBuffer));\n    });\n  }\n\n  private calculateResult(hash: Uint8Array): bigint {\n    let result = 0;\n    for (const byte of hash) {\n      result *= 0x100;\n      result += byte;\n    }\n    return BigInt(result);\n  }\n\n  private generateRandomSeed(): string {\n    const randomValues = new Uint8Array(20);\n    window.crypto.getRandomValues(randomValues); //-> use in browser env\n    const seed = Array.from(randomValues, (byte) => byte.toString(16).padStart(2, \"0\")).join(\"\");\n\n    return seed;\n  }\n\n  public async toInt(originalValue: string): Promise<bigint> {\n    const message = this.seed + String(originalValue);\n    const encoder = new TextEncoder();\n    const encoded = encoder.encode(message);\n    const hashed = await this.calculateSHADigestWeb(encoded);\n    const result = this.calculateResult(hashed);\n\n    return result;\n  }\n  public async getIntsFromRanges(originalValue: string, ...suprema: number[]): Promise<number[]> {\n    let result: bigint | number[] = [];\n    let bigNumber = await this.toInt(originalValue);\n    const arr: number[] = [];\n    for (const x of suprema) {\n      const s = BigInt(x);\n      arr.push(Number(bigNumber % s));\n      bigNumber = bigNumber / s;\n    }\n    result = arr;\n    return result;\n  }\n}\n\nexport default Randomizer;\n","import { data, dataSet } from \"dcmjs\";\nimport Randomizer from \"./randomizer\";\n\nclass UIAnonymizer {\n  private randomizer: Randomizer;\n\n  constructor(Randomizer: Randomizer) {\n    this.randomizer = Randomizer;\n  }\n\n  anonymize = async (dataset: dataSet, dataTag: string): Promise<boolean> => {\n    const tag = data.DicomMetaDictionary.punctuateTag(dataTag);\n\n    if (\n      dataset[dataTag].vr != \"UI\" ||\n      dataset[dataTag].Value[0] == undefined ||\n      data.DicomMetaDictionary.dictionary[tag].name.endsWith(\"ClassUID\") ||\n      data.DicomMetaDictionary.dictionary[tag].name == \"TransferSyntaxUID\"\n    ) {\n      return false;\n    } else {\n      if (dataset[dataTag].Value.length > 1) {\n        for (let i = 0; i < dataset[dataTag].Value.length; i++) {\n          dataset[dataTag].Value[i] = await this.newUI(dataset[dataTag].Value[i]);\n        }\n      } else if (dataset[dataTag].Value.length == 1) {\n        const originalUI = dataset[dataTag].Value[0];\n        dataset[dataTag].Value[0] = await this.newUI(originalUI);\n      } else {\n        dataset[dataTag].Value = [await this.newUI(\"\")];\n      }\n\n      return true;\n    }\n  };\n\n  async newUI(origUI: string) {\n    const result = await this.randomizer.toInt(origUI);\n    const number4String = BigInt(result);\n    const max = BigInt(\"1\" + \"0\".repeat(61));\n\n    return `2.${number4String % max}`;\n  }\n}\n\nexport default UIAnonymizer;\n","import { dataSet } from \"dcmjs\";\n\nclass UnwantedElementStripper {\n  private tags: string[];\n\n  constructor(keywords: string[]) {\n    this.tags = keywords;\n  }\n\n  anonymize = (dataset: dataSet, dataTag: string): boolean => {\n    if (this.tags.includes(dataTag)) {\n      delete dataset[dataTag];\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nexport default UnwantedElementStripper;\n","import { dataSet, data } from \"dcmjs\";\n\nclass TagError extends Error {\n  constructor(tag: string) {\n    const message = `Bad tag name '${tag}'. Must be a well-known DICOM element name or a string in the form 'stuv,wxyz' where each character is a hexadecimal digit.`;\n    super(message);\n\n    // Set the prototype explicitly to ensure correct inheritance\n    Object.setPrototypeOf(this, TagError.prototype);\n  }\n}\n\nclass ValueKeeper {\n  private protectedTags: string[] = [];\n\n  constructor(keywords: string[] = []) {\n    for (const tag of keywords) {\n      let pattern = /^\\(?([0-9A-F]{4}),?([0-9A-F]{4})\\)?$/;\n      let match = tag.match(pattern);\n      if (match) {\n        this.protectedTags.push(match[1] + match[2]);\n      } else {\n        pattern = /^[a-zA-Z]+$/;\n\n        try {\n          match = tag.match(pattern)!;\n          const tempTag = data.DicomMetaDictionary.nameMap[match[0]];\n          if (!tempTag) {\n            throw new TagError(\"invalidTag\");\n          } else {\n            const cleanStringTag = data.Tag.fromPString(tempTag.tag).toCleanString();\n            this.protectedTags.push(cleanStringTag);\n          }\n        } catch (error) {\n          if (error instanceof TagError) {\n            console.error(error.message);\n          } else {\n            // Handle other types of errors\n            console.error(\"An unexpected error occurred:\", error);\n          }\n        }\n      }\n    }\n  }\n\n  keep = (_: dataSet, dataTag: string): boolean => {\n    if (this.protectedTags.includes(dataTag)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nexport default ValueKeeper;\n","import { data, dataSet } from \"dcmjs\";\r\nimport AddressAnonymizer from \"./addressanonymizer\";\r\nimport DateTimeAnonymizer from \"./datetimeanonymizer\";\r\nimport FixedValueAnonymizer from \"./fixedvalueanonymizer\";\r\nimport IDAnonymizer from \"./idanonymizer\";\r\nimport InstitutionAnonymizer from \"./institutionanonymizer\";\r\nimport PNAnonymizer from \"./pnanonymizer\";\r\nimport PrivatTagAnonymizer from \"./privatetaganonymizer\";\r\nimport Randomizer from \"./randomizer\";\r\nimport UIAnonymizer from \"./uianonymizer\";\r\nimport UnwantedElementStripper from \"./unwantedelements\";\r\nimport ValueKeeper from \"./valuekeeper\";\r\n\r\ntype ElementHandler = (dataset: dataSet, tag: string) => boolean | Promise<boolean>;\r\n\r\ninterface AnonymizerOptions {\r\n  protectedTags?: string[];\r\n  anonymizePrivateTags?: boolean;\r\n  idPrefix?: string;\r\n  idSuffix?: string;\r\n  seed?: string;\r\n}\r\n\r\nconst defaultOptions: AnonymizerOptions = {\r\n  protectedTags: [],\r\n  anonymizePrivateTags: true,\r\n  idPrefix: undefined,\r\n  idSuffix: undefined,\r\n  seed: undefined,\r\n};\r\n\r\nexport default class Anonymizer {\r\n  /**\r\n    The main class responsible for anonymizing dcmjs datasets.\r\n    New instances will anonymize instances differently, so when\r\n    anonymizing instances from the same series, study, or patient,\r\n    reuse an Anonymizer.\r\n    \r\n  */\r\n\r\n  private dateOffsetHours = 0;\r\n  randomizer: Randomizer;\r\n  addressAnonymizer: AddressAnonymizer;\r\n  elementHandlers: ElementHandler[];\r\n  private _options: AnonymizerOptions;\r\n  private initPromise: Promise<void>;\r\n\r\n  constructor(options?: AnonymizerOptions) {\r\n    this._options = Object.assign({}, defaultOptions, options ?? {});\r\n    this.elementHandlers = [];\r\n    this.randomizer = new Randomizer(this._options.seed);\r\n    this.addressAnonymizer = new AddressAnonymizer(this.randomizer);\r\n    this.initPromise = this._create();\r\n  }\r\n\r\n  private async _create() {\r\n    await this.setOffset();\r\n\r\n    this.elementHandlers = [\r\n      new UnwantedElementStripper([\r\n        \"00101081\", //\"BranchOfService\",\r\n        \"00102180\", //\"Occupation\",\r\n        \"00101090\", //\"MedicalRecordLocator\",\r\n        \"00101080\", //\"MilitaryRank\",\r\n        \"00100050\", //\"PatientInsurancePlanCodeSequence\",\r\n        \"00102201\", //\"PatientReligiousPreference\",\r\n        \"00102155\", //\"PatientTelecomInformation\",\r\n        \"00102154\", //\"PatientTelephoneNumbers\",\r\n        \"00101100\", //\"ReferencedPatientPhotoSequence\",\r\n        \"00102299\", //\"ResponsibleOrganization\"\r\n      ]).anonymize,\r\n      new UIAnonymizer(this.randomizer).anonymize,\r\n      new PNAnonymizer(this.randomizer).anonymize,\r\n      new IDAnonymizer(\r\n        this.randomizer,\r\n        [\r\n          \"00080050\", //\"AccessionNumber\",\r\n          \"00101000\", //\"OtherPatientIDs\",\r\n          \"00402017\", //\"FillerOrderNumberImagingServiceRequest\",\r\n          //\"FillerOrderNumberImagingServiceRequestRetired\", Retired\r\n          //\"FillerOrderNumberProcedure\", Retired\r\n          \"00100020\", //\"PatientID\",\r\n          \"00400253\", //\"PerformedProcedureStepID\",\r\n          \"00402016\", //\"PlacerOrderNumberImagingServiceRequest\",\r\n          //\"PlacerOrderNumberImagingServiceRequestRetired\",Retired\r\n          // \"PlacerOrderNumberProcedure\", Retired\r\n          \"00401001\", //\"RequestedProcedureID\",\r\n          \"00400009\", //\"ScheduledProcedureStepID\",\r\n          \"00081010\", //\"StationName\",\r\n          \"00200010\", //\"StudyID\"\r\n        ],\r\n        this._options.idPrefix,\r\n        this._options.idSuffix\r\n      ).anonymize,\r\n      this.addressAnonymizer.anonymize,\r\n      new InstitutionAnonymizer(this.addressAnonymizer).anonymize,\r\n      new FixedValueAnonymizer(\"00321033\", \"\").anonymize, // RequestingService\r\n      new FixedValueAnonymizer(\"00380300\", \"\").anonymize, // CurrentPatientLocation\r\n    ];\r\n    if (this._options.protectedTags) {\r\n      this.elementHandlers.unshift(new ValueKeeper(this._options.protectedTags).keep);\r\n    }\r\n\r\n    if (this._options.anonymizePrivateTags) {\r\n      this.elementHandlers.push(new PrivatTagAnonymizer().anonymize);\r\n    }\r\n\r\n    await this.elementHandlers.push(new DateTimeAnonymizer(this.dateOffsetHours).anonymize);\r\n  }\r\n  async setOffset() {\r\n    const res = await this.randomizer.toInt(\"dateOffset\");\r\n    const minimumOffsetHours: number = 62 * 24;\r\n    const maximumOffsetHours: number = 730 * 24;\r\n\r\n    this.dateOffsetHours = Number(\r\n      -(\r\n        (res % (BigInt(maximumOffsetHours) - BigInt(minimumOffsetHours))) +\r\n        BigInt(minimumOffsetHours)\r\n      )\r\n    );\r\n  }\r\n\r\n  async anonymize(dcmDict: data.DicomDict) {\r\n    await this.initPromise;\r\n    await this.walk(dcmDict.meta, this.elementHandlers);\r\n    await this.walk(dcmDict.dict, this.elementHandlers);\r\n  }\r\n\r\n  async walk(dataset: dataSet, handler: ElementHandler[]) {\r\n    const tagList = Object.keys(dataset);\r\n\r\n    for (const tag of tagList) {\r\n      const element = dataset[tag];\r\n      await this.anonymizeElement(dataset, tag, handler);\r\n\r\n      // If the element is a sequence, recursively walk through its items\r\n      if (tag in dataset && element.vr == \"SQ\") {\r\n        for (let i = 0; i < element.Value.length; i++) {\r\n          const sequence = element.Value;\r\n          for (const item of sequence) {\r\n            await this.walk(item, handler);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async anonymizeElement(dataset: dataSet, tag: string, handler: ElementHandler[]) {\r\n    // Perform operations on the element\r\n\r\n    for (const callback of handler) {\r\n      const result = await callback(dataset, tag);\r\n\r\n      if (result) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["lists","AddressAnonymizer","Randomizer","data","dataset","dataTag","valueFactory","value","originalValue","street","streetNumber","city","streetNumberIndex","streetIndex","cityIndex","countryIndex","DateTimeAnonymizer","dateOffsetHours","dateTimeValue","dateTimeFormat","oldDateTime","newDateTime","newDateTimeString","dateString","year","month","day","hour","minute","second","milliseconds","date","format","padZero","length","hours","minutes","seconds","fillValue","arr","maxLength","_","index","timeName","timeNameTag","dates","result","times","newDates","newTimes","time","dateTimes","newDateTimes","FixedValueAnonymizer","tag","IDAnonymizer","keywords","idPrefix","idSuffix","i","idRoot","InstitutionAnonymizer","region","streetAddress","fullAddress","country","PNAnonymizer","randomizer","patientSex","originalName","sex","firstNames","lastNames","indices","PrivatTagAnonymizer","seed","array","hashBuffer","resolve","hash","byte","randomValues","message","encoded","hashed","suprema","bigNumber","x","s","UIAnonymizer","originalUI","origUI","number4String","max","UnwantedElementStripper","TagError","ValueKeeper","pattern","match","tempTag","cleanStringTag","error","defaultOptions","Anonymizer","options","res","minimumOffsetHours","maximumOffsetHours","dcmDict","handler","tagList","element","sequence","item","callback"],"mappings":"6PAAO,MAAMA,CAAM,CASjB,aAAc,CACZ,KAAK,iBAAmB,CACtB,OACA,WACA,QACA,UACA,YACA,WACA,QACA,QACA,WACA,UACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,WACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,MACA,OACA,UACA,WACA,WACA,SACA,SACA,QACA,SACA,YACA,UACA,YACA,QACA,QACA,YACA,UACA,MACA,QACA,QACA,QACA,QACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,UACA,YACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,OACA,YACA,QACA,UACA,UACA,SACA,QACA,QACA,OACA,OACA,SACA,UACA,SACA,UACA,SACA,OACA,OACA,aACA,QACA,SACA,QACA,OACA,OACA,OACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,SACA,WACA,QACA,OACA,UACA,SACA,OACA,QACA,QACA,QACA,WACA,QACA,MACA,SACA,SACA,YACA,SACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,SACA,UACA,OACA,UACA,QACA,SACA,QACA,QACA,MACA,SACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,OACA,SACA,UACA,WACA,OACA,OACA,YACA,SACA,QACA,QACA,WACA,OACA,QACA,SACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,OACA,WACA,SACA,OACA,QACA,MACA,QACA,MACA,SACA,UACA,QACA,WACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,OACA,MACA,QACA,OACA,SACA,QACA,QACA,OACA,WACA,SACA,QACA,WACA,OACA,QACA,OACA,SACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,SACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,MACA,UACA,YACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,WACA,OACA,KACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,OACA,UACA,SACA,QACA,QACA,YACA,SACA,OACA,SACA,OACA,YACA,OACA,QACA,MACA,YACA,QACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,SACA,SACA,WACA,OACA,QACA,MACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,YACA,UACA,YACA,SACA,OACA,OACA,MACA,UACA,UACA,SACA,aACA,SACA,UACA,QACA,UACA,SACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,QACA,OACA,QACA,WACA,SACA,UACA,YACA,UACA,OACA,QACA,SACA,QACA,QACA,MACA,MACA,WACA,UACA,SACA,UACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,QACA,UACA,SACA,QACA,OACA,OACA,QACA,SACA,aACA,UACA,QACA,YACA,MACA,QACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,OACA,YACA,OACA,SACA,OACA,UACA,MACA,SACA,UACA,WACA,UACA,QACA,UACA,WACA,UACA,YACA,SACA,UACA,QACA,aACA,QACA,OACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,OACA,UACA,SACA,WACA,OACA,OACA,SACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,QACA,WACA,QACA,WACA,WACA,UACA,OACA,WACA,OACA,QACA,SACA,SACA,SACA,WACA,WACA,UACA,SACA,YACA,SACA,OACA,SACA,OACA,QACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,QACA,MACA,QACA,QACA,QACA,SACA,OACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,SACA,QACA,QACA,QACA,MACA,SACA,UACA,QACA,QACA,WACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,UACA,QACA,UACA,QACA,WACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,QACA,OACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,QACA,UACA,YACA,QACA,SACA,UACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,OACA,UACA,SACA,MACA,SACA,YACA,OACA,UACA,SACA,MACA,UACA,UACA,SACA,SACA,QACA,UACA,UACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,WACA,SACA,UACA,SACA,SACA,QACA,OACA,SACA,MACA,UACA,WACA,OACA,QACA,YACA,UACA,YACA,SACA,SACA,WACA,OACA,WACA,UACA,MACA,SACA,SACA,OACA,QACA,MACA,UACA,UACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,QACA,OACA,WACA,QACA,SACA,OACA,QACA,QACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,OACA,SACA,SACA,UACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,SACA,SACA,SACA,YACA,WACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,MACA,UACA,SACA,UACA,OACA,SACA,UACA,YACA,UACA,OACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,SACA,QACA,UACA,QACA,UACA,OACA,QACA,QACA,QACA,OACA,OACA,OACA,MACA,MACA,SACA,QACA,QACA,OACA,YACA,SACA,SACA,QACA,UACA,QACA,WACA,SACA,SACA,SACA,QACA,SACA,UACA,SACA,WACA,QACA,QACA,YACA,QACA,QACA,QACA,OACA,YACA,UACA,MACA,QACA,SACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,UACA,WACA,MACA,MACA,WACA,QACA,UACA,aACA,aACA,MACA,UACA,MACA,OACA,SACA,OACA,SACA,UACA,SACA,OACA,UACA,SACA,UACA,SACA,OACA,QACA,QACA,SACA,SACA,SACA,WACA,UACA,WACA,WACA,SACA,SACA,UACA,SACA,QACA,SACA,YACA,SACA,MACA,UACA,QACA,UACA,SACA,SACA,UACA,UACA,OACA,SACA,YACA,SACA,QACA,QACA,MACA,QACA,YACA,SACA,UACA,SACA,QACA,QACA,aACA,WACA,SACA,QACA,SACA,OACA,YACA,SACA,UACA,UACA,UACA,OACA,SACA,UACA,OACA,WACA,OACA,UACA,SACA,WACA,UACA,QACA,SACA,QACA,SACA,WACA,UACA,YACA,UACA,QACA,OACA,QACA,UACA,SACA,OACA,QACA,QACA,WACA,OACA,SACA,SACA,UACA,QACA,QACA,QACA,WACA,aACA,UACA,QACA,UACA,UACA,QACA,QACA,SACA,QACA,UACA,UACA,OACA,QACA,OACA,YACA,WACA,OACA,SACA,UACA,WACA,UACA,OACA,SACA,UACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,SACA,UACA,UACA,UACA,QACA,QACA,QACA,QACA,SACA,WACA,QACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,UACA,SACA,UACA,UACA,QACA,YACA,SACA,SACA,WACA,YACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,aACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,UACA,SACA,YACA,OACA,SACA,UACA,QACA,WACA,WACA,WACA,SACA,SACA,WACA,SACA,QACA,SACA,YACA,WACA,QACA,UACA,YACA,MACA,QACA,QACA,QACA,SACA,OACA,WACA,SACA,QACA,SACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,QACA,QACA,QACA,SACA,OACA,WACA,SACA,OACA,WACA,SACA,QACA,QACA,OACA,SACA,UACA,QACA,QACA,UACA,UACA,OACA,UACA,WACA,OACA,WACA,SACA,WACA,WACA,QACA,QAAA,EAEF,KAAK,eAAiB,CACpB,QACA,OACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,cACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,UACA,OACA,UACA,OACA,QACA,UACA,QACA,QACA,OACA,UACA,SACA,UACA,UACA,SACA,QACA,SACA,SACA,UACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,QACA,MACA,OACA,OACA,SACA,WACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,WACA,WACA,MACA,WACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,QACA,OACA,QACA,WACA,OACA,SACA,QACA,SACA,OACA,QACA,UACA,QACA,QACA,OACA,OACA,OACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,UACA,SACA,OACA,OACA,QACA,MACA,SACA,SACA,OACA,UACA,UACA,QACA,UACA,YACA,MACA,OACA,QACA,MACA,QACA,QACA,OACA,UACA,QACA,YACA,UACA,QACA,QACA,YACA,SACA,UACA,WACA,WACA,SACA,QACA,MACA,MACA,MACA,SACA,OACA,MACA,SACA,OACA,QACA,QACA,OACA,QACA,SACA,UACA,SACA,QACA,MACA,QACA,MACA,SACA,SACA,OACA,OACA,QACA,SACA,QACA,UACA,MACA,QACA,UACA,QACA,SACA,UACA,SACA,UACA,QACA,OACA,SACA,QACA,UACA,MACA,OACA,SACA,QACA,QACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,QACA,YACA,SACA,SACA,QACA,SACA,OACA,MACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,UACA,MACA,WACA,SACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,SACA,YACA,SACA,WACA,UACA,MACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,MACA,UACA,OACA,MACA,SACA,SACA,UACA,QACA,SACA,UACA,SACA,MACA,UACA,MACA,MACA,QACA,QACA,UACA,UACA,OACA,OACA,UACA,SACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,OACA,SACA,OACA,WACA,WACA,QACA,OACA,SACA,SACA,QACA,OACA,OACA,WACA,OACA,UACA,WACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,YACA,SACA,OACA,OACA,SACA,UACA,WACA,OACA,SACA,OACA,SACA,OACA,UACA,SACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,OACA,UACA,UACA,MACA,UACA,UACA,UACA,OACA,QACA,UACA,OACA,SACA,QACA,QACA,SACA,WACA,QACA,UACA,SACA,SACA,OACA,MACA,SACA,QACA,YACA,UACA,UACA,QACA,SACA,OACA,UACA,QACA,SACA,QACA,KACA,OACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,KACA,UACA,QACA,QACA,UACA,QACA,YACA,UACA,QACA,QACA,OACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,SACA,QACA,YACA,MACA,YACA,SACA,WACA,UACA,UACA,SACA,QACA,YACA,QACA,SACA,UACA,SACA,OACA,QACA,UACA,QACA,aACA,OACA,OACA,SACA,UACA,OACA,SACA,QACA,SACA,QACA,SACA,WACA,QACA,UACA,WACA,SACA,UACA,OACA,OACA,QACA,QACA,KACA,UACA,OACA,OACA,UACA,QACA,QACA,UACA,QACA,UACA,UACA,QACA,SACA,UACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,SACA,MACA,OACA,QACA,OACA,YACA,QACA,UACA,OACA,QACA,SACA,WACA,QACA,QACA,OACA,UACA,QACA,QACA,OACA,QACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,WACA,MACA,SACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,OACA,UACA,OACA,OACA,QACA,WACA,OACA,SACA,OACA,QACA,WACA,WACA,UACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,MACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,QACA,SACA,QACA,YACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,SACA,SACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,SACA,WACA,QACA,SACA,QACA,UACA,WACA,OACA,SACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,WACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,MACA,UACA,MACA,QACA,MACA,SACA,WACA,SACA,SACA,MACA,SACA,QACA,WACA,QACA,SACA,MACA,UACA,UACA,QACA,SACA,SACA,SACA,OACA,SACA,UACA,MACA,SACA,QACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,OACA,SACA,SACA,MACA,QACA,OACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,SACA,SACA,QACA,YACA,WACA,KACA,SACA,SACA,MACA,OACA,SACA,OACA,YACA,QACA,WACA,WACA,QACA,UACA,QACA,QACA,QACA,WACA,UACA,OACA,QACA,SACA,OACA,YACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,UACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,MACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,YACA,QACA,WACA,OACA,QACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,SACA,OACA,QACA,UACA,SACA,SACA,UACA,UACA,OACA,SACA,SACA,SACA,SACA,QACA,WACA,WACA,UACA,SACA,QACA,SACA,OACA,UACA,OACA,UACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,UACA,WACA,UACA,QACA,SACA,SACA,QACA,YACA,UACA,SACA,UACA,QACA,UACA,SACA,SACA,WACA,QACA,UACA,UACA,QACA,UACA,OACA,SACA,OACA,UACA,UACA,UACA,UACA,OACA,QACA,SACA,WACA,OACA,WACA,QACA,QACA,QACA,QACA,SACA,MACA,UACA,OACA,SACA,UACA,UACA,YACA,QACA,QACA,WACA,UACA,OACA,OACA,QACA,WACA,SACA,QACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,UACA,QACA,SACA,UACA,SACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,QACA,WACA,SACA,UACA,SACA,YACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,WACA,WACA,QACA,OACA,OACA,SACA,UACA,WACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,OACA,QACA,MACA,SACA,QACA,QACA,QACA,SACA,QACA,YACA,UACA,UACA,OACA,UACA,MACA,UACA,UACA,QACA,QACA,SACA,OACA,WACA,WACA,SACA,QACA,UACA,UACA,OACA,OACA,aACA,UACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,UACA,OACA,OACA,SACA,WACA,UACA,SACA,OACA,UACA,QACA,OACA,SACA,SACA,OACA,WACA,MACA,UACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,MACA,MACA,UACA,OACA,WACA,QACA,UACA,MACA,MACA,UACA,QACA,QACA,SACA,YACA,OACA,SACA,OACA,MACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,UACA,QACA,UACA,SACA,QACA,QACA,MACA,MACA,QACA,UACA,OACA,OACA,OACA,SACA,UACA,SACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,OACA,SACA,QACA,WACA,OAAA,EAEF,KAAK,cAAgB,KAAK,iBAAiB,OAAO,KAAK,cAAc,EACrE,KAAK,UAAY,CACf,QACA,UACA,WACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,WACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,WACA,WACA,QACA,YACA,QACA,MACA,SACA,OACA,QACA,QACA,YACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,SACA,WACA,WACA,SACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,aACA,MACA,SACA,OACA,SACA,WACA,OACA,UACA,QACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,SACA,OACA,YACA,UACA,UACA,QACA,SACA,OACA,YACA,SACA,SACA,aACA,SACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,OACA,QACA,QACA,OACA,WACA,SACA,WACA,UACA,QACA,OACA,OACA,SACA,QACA,WACA,SACA,QACA,WACA,SACA,WACA,OACA,WACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,OACA,YACA,OACA,QACA,UACA,SACA,QACA,UACA,QACA,SACA,WACA,OACA,QACA,UACA,OACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,QACA,WACA,SACA,SACA,SACA,MACA,UACA,QACA,UACA,SACA,SACA,OACA,aACA,UACA,OACA,UACA,OACA,SACA,MACA,QACA,YACA,YACA,SACA,SACA,WACA,UACA,SACA,OACA,SACA,SACA,SACA,WACA,SACA,SACA,YACA,OACA,UACA,OACA,UACA,WACA,UACA,UACA,SACA,aACA,WACA,aACA,WACA,QACA,QACA,SACA,QACA,SACA,UACA,WACA,SACA,YACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,OACA,MACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,SACA,UACA,QACA,SACA,MACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,WACA,UACA,MACA,QACA,UACA,OACA,OACA,UACA,SACA,OACA,WACA,OACA,WACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,SACA,UACA,WACA,QACA,QACA,QACA,YACA,WACA,OACA,UACA,WACA,QACA,QACA,OACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,OACA,SACA,QACA,SACA,WACA,SACA,QACA,OACA,SACA,QACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,SACA,WACA,QACA,UACA,QACA,QACA,SACA,QACA,YACA,UACA,SACA,QACA,QACA,SACA,SACA,WACA,QACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,YACA,UACA,SACA,OACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,SACA,UACA,UACA,OACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,UACA,SACA,QACA,SACA,aACA,WACA,SACA,UACA,SACA,OACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,OACA,SACA,SACA,UACA,SACA,SACA,UACA,UACA,OACA,QACA,QACA,QACA,UACA,OACA,QACA,UACA,OACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,QACA,aACA,SACA,QACA,UACA,WACA,OACA,QACA,OACA,WACA,QACA,UACA,QACA,SACA,QACA,UACA,WACA,UACA,UACA,cACA,QACA,QACA,SACA,UACA,aACA,YACA,SACA,WACA,QACA,WACA,MACA,UACA,QACA,YACA,WACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,YACA,OACA,SACA,SACA,SACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,SACA,WACA,SACA,OACA,OACA,aACA,QACA,QACA,SACA,SACA,SACA,YACA,UACA,OACA,QACA,YACA,QACA,WACA,UACA,OACA,SACA,UACA,UACA,UACA,YACA,OACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,OACA,QACA,OACA,QACA,SACA,QACA,UACA,YACA,QACA,SACA,QACA,WACA,YACA,SACA,OACA,SACA,OACA,UACA,UACA,WACA,UACA,UACA,OACA,SACA,QACA,UACA,WACA,UACA,UACA,YACA,QACA,QACA,OACA,QACA,SACA,QACA,UACA,YACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,OACA,QACA,SACA,UACA,OACA,OACA,UACA,SACA,YACA,YACA,QACA,SACA,OACA,SACA,WACA,SACA,SACA,UACA,QACA,WACA,YACA,SACA,QACA,WACA,UACA,UACA,OACA,SACA,QACA,YACA,UACA,UACA,UACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,UACA,UACA,SACA,WACA,UACA,QACA,aACA,OACA,SACA,UACA,SACA,QACA,SACA,QACA,QACA,OACA,YACA,OACA,QACA,cACA,UACA,UACA,SACA,SACA,QACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,YACA,SACA,UACA,UACA,WACA,MACA,SACA,QACA,UACA,SACA,OACA,UACA,aACA,QACA,QACA,UACA,QACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,OACA,UACA,UACA,SACA,QACA,QACA,QACA,WACA,UACA,QACA,SACA,UACA,SACA,WACA,OACA,QACA,aACA,SACA,SACA,WACA,OACA,QACA,OACA,UACA,SACA,OACA,OACA,UACA,WACA,YACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,WACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,UACA,WACA,OACA,QACA,OACA,QACA,SACA,QACA,WACA,QACA,UACA,OACA,SACA,aACA,YACA,SACA,SACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,aACA,WACA,SACA,WACA,OACA,OACA,UACA,aACA,SACA,QACA,YACA,QACA,UACA,QACA,OACA,SACA,QACA,UACA,QACA,YACA,SACA,QACA,WACA,OACA,OACA,WACA,SACA,OACA,SACA,OACA,QACA,SACA,OACA,WACA,UACA,WACA,SACA,QACA,QACA,QACA,QACA,WACA,MACA,QACA,YACA,QACA,UACA,SACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,UACA,OACA,MACA,QACA,UACA,SACA,UACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,OACA,QACA,QACA,YACA,UACA,SACA,OACA,UACA,YACA,QACA,SACA,WACA,SACA,SACA,SACA,WACA,QACA,UACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,WACA,SACA,OACA,OACA,WACA,OACA,UACA,SACA,QACA,SACA,MACA,SACA,OACA,QACA,OACA,WACA,MACA,UACA,QACA,YACA,YACA,SACA,UACA,SACA,SACA,OACA,QACA,SACA,OACA,QACA,cACA,aACA,UACA,QACA,SACA,YACA,UACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,SACA,UACA,QACA,YACA,UACA,OACA,UACA,QACA,UACA,SACA,UACA,SACA,OACA,SACA,OACA,SACA,WACA,SACA,WACA,YACA,SACA,OACA,UACA,SACA,QACA,UACA,OACA,YACA,QACA,UACA,QACA,SACA,YACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,OACA,SACA,WACA,SACA,OACA,QACA,WACA,OACA,UACA,SACA,OACA,SACA,UACA,UACA,QACA,OACA,OACA,UACA,OACA,QACA,SACA,UACA,SACA,QACA,YACA,OACA,SACA,UACA,KACA,UACA,WACA,QACA,WACA,SACA,UACA,OACA,SACA,UACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,QACA,UACA,UACA,UACA,QACA,YACA,UACA,OACA,MAAA,EAEF,KAAK,QAAU,CACb,iBACA,WACA,mBACA,aACA,eACA,kBACA,eACA,kBACA,mBACA,mBACA,eACA,gBACA,gBACA,kBACA,eACA,oBACA,kBACA,kBACA,mBACA,cACA,gBACA,kBACA,eACA,gBACA,cACA,WACA,aACA,kBACA,iBACA,gBACA,qBACA,kBACA,mBACA,eACA,mBACA,gBACA,iBACA,aACA,kBACA,gBACA,eACA,aACA,iBACA,eACA,gBACA,aACA,kBACA,gBACA,eACA,aACA,mBACA,gBACA,gBACA,aACA,kBACA,eACA,aACA,eACA,iBACA,eACA,kBACA,aACA,mBACA,eACA,kBACA,iBACA,eACA,eACA,gBACA,iBACA,gBACA,cACA,kBACA,gBACA,cACA,iBACA,cACA,YACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,gBACA,kBACA,kBACA,aACA,gBACA,gBACA,kBACA,YACA,mBACA,YACA,mBACA,aACA,gBACA,eACA,cACA,UACA,cAAA,EAEF,KAAK,OAAS,CACZ,SACA,YACA,YACA,cACA,OACA,UACA,SACA,WACA,QACA,UACA,QACA,YACA,YACA,SACA,QACA,SACA,0BACA,WACA,YACA,SACA,SACA,UACA,UACA,WACA,SACA,eACA,UACA,UACA,YACA,SACA,aACA,WACA,SACA,eACA,SACA,UACA,gBACA,YACA,UACA,SACA,WACA,cACA,iBACA,YACA,UACA,aACA,SACA,QACA,SACA,OAAA,EAEF,KAAK,UAAY,CACf,OACA,UACA,WACA,WACA,UACA,UACA,SACA,2BACA,SACA,UACA,SACA,qBACA,UACA,iCACA,WACA,2BACA,8BACA,UACA,SACA,SACA,WACA,aACA,QACA,SACA,OACA,mCACA,cACA,uBACA,OACA,UACA,UACA,WACA,iBACA,aACA,aACA,mCACA,cACA,WACA,SACA,8BACA,oBACA,cACA,OACA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,iBACA,eACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,cACA,cACA,SACA,UACA,UACA,SACA,WACA,UACA,cACA,YACA,UACA,UACA,iBACA,cACA,UACA,YACA,WACA,cAAA,CAEJ,CACF,CCjrGA,MAAMC,CAAkB,CAStB,YAAYC,EAAwB,CALpC,KAAA,WAAqBC,OAAK,oBAAoB,QAAQ,eAAkB,IACxE,KAAA,UAAoBA,OAAK,oBAAoB,QAAQ,kBAAqB,IAC1E,KAAA,WAAqBA,OAAK,oBAAoB,QAAQ,mBAAsB,IAkBhE,KAAA,UAAA,MAAOC,EAAkBC,IAAsC,CACzE,MAAMC,EAAe,MAAM,KAAK,eAAeD,CAAO,EAEtD,GAAIC,GAAgB,KACX,MAAA,GAGT,GAAIF,EAAQC,CAAO,EAAE,MAAM,OAAS,EAClC,OAAAD,EAAQC,CAAO,EAAE,MAAQ,MAAM,QAAQ,IACrCD,EAAQC,CAAO,EAAE,MAAM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"}